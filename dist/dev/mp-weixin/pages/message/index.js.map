{"version":3,"file":"index.js","sources":["../../../../../src/pages/message/index.vue","../../../../../uniPage:/cGFnZXMvbWVzc2FnZS9pbmRleC52dWU"],"sourcesContent":["<!--\r\n * @Author: Aiden(戴林波)\r\n * @Date: 2021-12-17 17:50:38\r\n * @LastEditTime: 2022-05-12 10:48:07\r\n * @LastEditors: Aiden(戴林波)\r\n * @Description: \r\n * @Email: jason_dlb@sina.cn\r\n-->\r\n<template>\r\n  <view>\r\n    <view\r\n      v-for=\"item in convers\"\r\n      :key=\"item.userID\"\r\n      class=\"conver\"\r\n      @click=\"goChat(item)\"\r\n    >\r\n      <view class=\"conver-msg\">\r\n        <view class=\"chat_bg_msg_icon-wraper\">\r\n          <image\r\n            :src=\"\r\n              item.faceURL && item.faceURL.includes('https://')\r\n                ? item.faceURL\r\n                : defaultAvatar\r\n            \"\r\n            class=\"chat_bg_msg_icon\"\r\n          />\r\n          <view class=\"unread-total\" v-if=\"item.unreadCount\"\r\n            ><text>{{ item.unreadCount }}</text></view\r\n          >\r\n        </view>\r\n        <view class=\"content-wraper\">\r\n          <text>{{ item.showName }}</text>\r\n          <text>{{ showLastMessage(item.latestMsg) }}</text>\r\n        </view>\r\n      </view>\r\n      <text class=\"conver-time\">{{\r\n        $filters.formatMsgDate(item.latestMsgSendTime)\r\n      }}</text>\r\n    </view>\r\n  </view>\r\n</template>\r\n\r\n<script>\r\nimport { onMounted, computed, ref, watch } from \"vue\";\r\nimport openIM from \"@/utils/openIM.js\";\r\nimport { getIMToken } from \"../../utils/auth.js\";\r\nimport { useStore } from \"vuex\";\r\nimport ChatContent from \"./ChatContent.vue\";\r\nexport default {\r\n  components: {\r\n    ChatContent,\r\n  },\r\n  onShow(){\r\n    console.log('show======')\r\n    this.getAllConversationList()\r\n  },\r\n  setup() {\r\n    const defaultAvatar = \"/static/images/default_avatar.png\";\r\n    const store = useStore();\r\n    const userInfo = computed(() => store.state.user.userInfo).value;\r\n    const convers = ref([]);\r\n    const goChat = (item) => {\r\n      console.log(\"item=\", item);\r\n      uni.navigateTo({\r\n        url: `/pages/message/Chat?userID=${item.userID}&title=${item.showName}`,\r\n      });\r\n    };\r\n    const getAllConversationList = () => {\r\n      openIM\r\n        .getAllConversationList()\r\n        .then(({ data }) => {\r\n          console.log(\"会话总数data====\", JSON.parse(data));\r\n          convers.value = JSON.parse(data);\r\n          unReadMessage();\r\n        })\r\n        .catch((err) => {\r\n          console.log(\"err=\", err);\r\n        });\r\n    };\r\n    const connectIM = (userID, token) => {\r\n      console.log(\"userID, token=====================\", userID, token);\r\n      const config = {\r\n        userID,\r\n        token,\r\n        // url: \"ws://42.192.229.151/:10003\",\r\n        url: \"wss://mancao.social:20038\",\r\n        platformID: 5,\r\n      };\r\n      openIM\r\n        .login(config)\r\n        .then((res) => {\r\n          console.log(\"login suc...\", res);\r\n          if (res.errCode === 0) {\r\n            getAllConversationList();\r\n          }\r\n        })\r\n        .catch((err) => {\r\n          console.log(\"login failed...\", err);\r\n        });\r\n    };\r\n\r\n    const showLastMessage = (lastData) => {\r\n      return JSON.parse(lastData).content;\r\n    };\r\n\r\n    const unReadMessage = () => {\r\n      openIM\r\n        .getTotalUnreadMsgCount()\r\n        .then(({ data }) => {\r\n          console.log(\"data===\", data);\r\n          console.log('Number(data)=', Number(data))\r\n          if(Number(data) > 0){\r\n          uni.setTabBarBadge({\r\n            index: 2,\r\n            text: '···'\r\n          });\r\n          }else {\r\n            uni.removeTabBarBadge({\r\n              index: 2\r\n            })\r\n          }\r\n        })\r\n        .catch((err) => {\r\n          console.log(\"err=\", err);\r\n        });\r\n    };\r\n\r\n    const monitorOnRecv = () => {\r\n      openIM.on(\"OnRecvNewMessage\", (data) => {\r\n        const RecvMessage = JSON.parse(data.data);\r\n        if (RecvMessage.contentType === 101) {\r\n          getAllConversationList();\r\n        }\r\n      });\r\n    };\r\n\r\n    onMounted(() => {\r\n      connectIM(userInfo.phone, getIMToken());\r\n      monitorOnRecv();\r\n      // login();\r\n      // resiger()\r\n    });\r\n    return {\r\n      defaultAvatar,\r\n      convers,\r\n      goChat,\r\n      showLastMessage,\r\n      getAllConversationList\r\n    };\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped lang=\"scss\">\r\n.conver {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  border-bottom: 1rpx solid #dbdbdb;\r\n  padding: 10rpx;\r\n  .conver-msg {\r\n    display: flex;\r\n  }\r\n  .chat_bg_msg_icon-wraper {\r\n    position: relative;\r\n  }\r\n  .unread-total {\r\n    position: absolute;\r\n    right: -12rpx;\r\n    top: -8rpx;\r\n    width: auto;\r\n    height: auto;\r\n    border-radius: 50%;\r\n    padding: 4rpx;\r\n    background: #f00;\r\n    color: #fff;\r\n    font-size: 12rpx;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n  }\r\n  .chat_bg_msg_icon {\r\n    width: 84rpx;\r\n    height: 84rpx;\r\n  }\r\n  .content-wraper {\r\n    display: flex;\r\n    flex-direction: column;\r\n    margin: 0 12rpx;\r\n    background-color: #f2f2f2;\r\n  }\r\n  .conver-time {\r\n  }\r\n}\r\n</style>\r\n","import MiniProgramPage from 'C:/myself/social/social/src/pages/message/index.vue'\nwx.createPage(MiniProgramPage)"],"names":["useStore","computed","ref","uni","openIM","onMounted","getIMToken"],"mappings":";;;;AA+CA,oBAAoB,MAAW;AAC/B;EACE,YAAY;AAAA,IACV;AAAA;EAEF,SAAQ;AACN,YAAQ,IAAI,YAAY;AACxB,SAAK;;EAEP,QAAQ;AACN,UAAM,gBAAgB;AACtB,UAAM,QAAQA;AACd,UAAM,WAAWC,yBAAS,MAAM,MAAM,MAAM,KAAK,QAAQ,EAAE;AAC3D,UAAM,UAAUC,kBAAI,EAAE;AACtB,UAAM,SAAS,CAAC,SAAS;AACvB,cAAQ,IAAI,SAAS,IAAI;AACzBC,0BAAI,WAAW;AAAA,QACb,KAAK,8BAA8B,KAAK,gBAAgB,KAAK;AAAA,OAC9D;AAAA;AAEH,UAAM,yBAAyB,MAAM;AACnCC,0BACG,yBACA,KAAK,CAAC,EAAE,WAAW;AAClB,gBAAQ,IAAI,oCAAgB,KAAK,MAAM,IAAI,CAAC;AAC5C,gBAAQ,QAAQ,KAAK,MAAM,IAAI;AAC/B;OACD,EACA,MAAM,CAAC,QAAQ;AACd,gBAAQ,IAAI,QAAQ,GAAG;AAAA,OACxB;AAAA;AAEL,UAAM,YAAY,CAAC,QAAQ,UAAU;AACnC,cAAQ,IAAI,sCAAsC,QAAQ,KAAK;AAC/D,YAAM,SAAS;AAAA,QACb;AAAA,QACA;AAAA,QAEA,KAAK;AAAA,QACL,YAAY;AAAA;AAEdA,0BACG,MAAM,MAAM,EACZ,KAAK,CAAC,QAAQ;AACb,gBAAQ,IAAI,gBAAgB,GAAG;AAC/B,YAAI,IAAI,YAAY,GAAG;AACrB;;OAEH,EACA,MAAM,CAAC,QAAQ;AACd,gBAAQ,IAAI,mBAAmB,GAAG;AAAA,OACnC;AAAA;AAGL,UAAM,kBAAkB,CAAC,aAAa;AACpC,aAAO,KAAK,MAAM,QAAQ,EAAE;AAAA;AAG9B,UAAM,gBAAgB,MAAM;AAC1BA,0BACG,yBACA,KAAK,CAAC,EAAE,WAAW;AAClB,gBAAQ,IAAI,WAAW,IAAI;AAC3B,gBAAQ,IAAI,iBAAiB,OAAO,IAAI,CAAC;AACzC,YAAG,OAAO,IAAI,IAAI,GAAE;AACpBD,8BAAI,eAAe;AAAA,YACjB,OAAO;AAAA,YACP,MAAM;AAAA,WACP;AAAA,eACK;AACJA,8BAAI,kBAAkB;AAAA,YACpB,OAAO;AAAA,WACR;AAAA;OAEJ,EACA,MAAM,CAAC,QAAQ;AACd,gBAAQ,IAAI,QAAQ,GAAG;AAAA,OACxB;AAAA;AAGL,UAAM,gBAAgB,MAAM;AAC1BC,0BAAO,GAAG,oBAAoB,CAAC,SAAS;AACtC,cAAM,cAAc,KAAK,MAAM,KAAK,IAAI;AACxC,YAAI,YAAY,gBAAgB,KAAK;AACnC;;OAEH;AAAA;AAGHC,4BAAU,MAAM;AACd,gBAAU,SAAS,OAAOC,uBAAY;AACtC;KAGD;AACD,WAAO;AAAA,MACL;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA;;AAGN;;;;;;;;;;;;;;;;;;;;ACrJA,GAAG,WAAW,eAAe;"}