{"version":3,"file":"request.js","sources":["../../../../src/utils/request.js"],"sourcesContent":["/*\r\n * @Author: Aiden(戴林波)\r\n * @Date: 2021-12-17 17:41:15\r\n * @LastEditTime: 2022-05-06 14:32:19\r\n * @LastEditors: Aiden(戴林波)\r\n * @Description: \r\n * @Email: jason_dlb@sina.cn\r\n */\r\nimport { getToken, getIMToken } from './auth.js'\r\n\r\n// 显示加载loading\r\nfunction showLoading(title) {\r\n  uni.showLoading({\r\n    title: title || '加载中...'\r\n  })\r\n}\r\n// 隐藏加载loading\r\nfunction hideLoading() {\r\n  uni.hideLoading()\r\n}\r\n\r\n// 加载之后提示\r\nfunction showToast(title) {\r\n  uni.showToast({\r\n    title: title,\r\n    icon: 'none',\r\n    duration: 2000\r\n  })\r\n}\r\n\r\nexport const request = (url, method, data = {}, contentType = 'application/json') => {\r\n\tconsole.log('url===', url)\r\n\tconsole.log('process.env.BASE_URL=', process.env.BASE_URL)\r\n\tconsole.log('contentType===', contentType)\r\n\treturn new Promise((resolve, reject) => {\r\n\t\tshowLoading()\r\n\t\tuni.request({\r\n\t\t\t// url: `http:127.0.0.1:3000${url}`,\r\n\t\t\turl: process.env.BASE_URL + url,\r\n\t\t\tmethod,\r\n\t\t\tdata,\r\n\t\t\theader: {\r\n\t\t\t  'Content-Type': contentType,\r\n\t\t\t  'token': getToken()\r\n\t\t\t},\r\n\t\t\tsuccess: res => {\r\n\t\t\t\tresolve(res)\r\n\t\t\t\t// showToast(res.data.msg)\r\n\t\t\t},\r\n\t\t\tfail: (err) => {\r\n\t\t\t\tshowToast('网络请求失败')\r\n\t\t\t\treject(err)\r\n\t\t\t},\r\n\t\t\tcomplete: () => {\r\n\t\t\t\thideLoading()\r\n\t\t\t}\r\n\t\t})\r\n\t})\r\n}\r\n\r\nexport const requestIM = (url, method, data = {}, contentType = 'application/json') => {\r\n\tconsole.log('url===', url)\r\n\tconsole.log('contentType===', contentType)\r\n\treturn new Promise((resolve, reject) => {\r\n\t\tshowLoading()\r\n\t\tuni.request({\r\n\t\t\turl: process.env.BASE_URL + url,\r\n\t\t\tmethod,\r\n\t\t\tdata,\r\n\t\t\theader: {\r\n\t\t\t  'Content-Type': contentType,\r\n\t\t\t  'token': getIMToken()\r\n\t\t\t},\r\n\t\t\tsuccess: res => {\r\n\t\t\t\tresolve(res)\r\n\t\t\t\t// showToast(res.data.msg)\r\n\t\t\t},\r\n\t\t\tfail: (err) => {\r\n\t\t\t\tshowToast('网络请求失败')\r\n\t\t\t\treject(err)\r\n\t\t\t},\r\n\t\t\tcomplete: () => {\r\n\t\t\t\thideLoading()\r\n\t\t\t}\r\n\t\t})\r\n\t})\r\n}"],"names":["uni","getToken"],"mappings":";;;AAWA,qBAAqB,OAAO;AAC1BA,sBAAI,YAAY;AAAA,IACd,OAAO,SAAS;AAAA,GACjB;AACH;AAEA,uBAAuB;AACrBA,sBAAI;AACN;AAGA,mBAAmB,OAAO;AACxBA,sBAAI,UAAU;AAAA,IACZ;AAAA,IACA,MAAM;AAAA,IACN,UAAU;AAAA,GACX;AACH;AAEY,MAAC,UAAU,CAAC,KAAK,QAAQ,OAAO,IAAI,cAAc,uBAAuB;AACpF,UAAQ,IAAI,UAAU,GAAG;AACzB,UAAQ,IAAI,uDAAyB,6CAAY,QAAQ;AACzD,UAAQ,IAAI,kBAAkB,WAAW;AACzC,SAAO,IAAI,QAAQ,CAAC,SAAS,WAAW;AACvC;AACAA,wBAAI,QAAQ;AAAA,MAEX,KAAK,6CAAY,WAAW;AAAA,MAC5B;AAAA,MACA;AAAA,MACA,QAAQ;AAAA,QACN,gBAAgB;AAAA,QAChB,SAASC;;MAEX,SAAS,SAAO;AACf,gBAAQ,GAAG;AAAA;MAGZ,MAAM,CAAC,QAAQ;AACd,kBAAU,sCAAQ;AAClB,eAAO,GAAG;AAAA;MAEX,UAAU,MAAM;AACf;;KAED;AAAA,GACD;AACF;;"}