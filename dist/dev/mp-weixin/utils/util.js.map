{"version":3,"file":"util.js","sources":["../../../../src/utils/util.js"],"sourcesContent":["/*\r\n * @Author: Aiden(戴林波)\r\n * @Date: 2022-02-10 16:27:29\r\n * @LastEditTime: 2022-05-17 17:46:58\r\n * @LastEditors: Aiden(戴林波)\r\n * @Description: \r\n * @Email: jason_dlb@sina.cn\r\n */\r\nimport moment from 'moment'\r\nmoment.updateLocale('en', {\r\n  relativeTime: {\r\n    s: '%d秒前',\r\n    m: \"1分钟前\",\r\n    mm: \"%d分钟前\",\r\n    h: \"1小时前\",\r\n    hh: \"%d小时前\",\r\n    d: \"1天前\",\r\n    dd: \"%d天前\",\r\n    M: \"1个月前\",\r\n    MM: \"%d个月前\",\r\n    y: \"1年前\",\r\n    yy: \"%d年前\"\r\n  }\r\n})\r\n\r\nexport function fileParse(file, type = 'base64') {\r\n    return new Promise(resolve => {\r\n        const fileRead = new FileReader()\r\n        if(type === 'base64'){\r\n            fileRead.readAsDataURL(file)\r\n        } else if(type === 'buffer'){\r\n            fileRead.readAsArrayBuffer(file)\r\n        }\r\n        fileRead.onload = (event) => resolve(event.target.result)\r\n    })\r\n}\r\n\r\nexport function formatDate(createTime){\r\n    return moment(createTime).toNow(true)\r\n}\r\n\r\nexport const formatMsgDate = (timestamp) => {\r\n    const week = (w) => {\r\n        switch(w){\r\n            case '1': return '一';\r\n            case '2': return '二';\r\n            case '3': return '三';\r\n            case '4': return '四';\r\n            case '5': return '五';\r\n            case '6': return '六';\r\n            case '7': return '日';\r\n        }\r\n    }\r\n    if(moment(timestamp).isSameOrAfter(moment(), \"day\")){\r\n       return moment(timestamp).format('H:mm');\r\n    } else if(moment(timestamp).isSameOrAfter(moment().subtract(1, 'day'), \"day\")){\r\n        return `昨天${moment(timestamp).format('H:mm')}`;\r\n    } else if(moment(timestamp).isSameOrAfter(moment().subtract(7, 'day'), \"day\")){\r\n        return `星期${week(moment(timestamp).format('E'))} ${moment(timestamp).format('H:mm')}`;\r\n    }else {\r\n        return moment(timestamp).format('YYYY年M月D日 H:mm');\r\n    }\r\n  };"],"names":["moment"],"mappings":";;AASAA,oBAAO,aAAa,MAAM;AAAA,EACxB,cAAc;AAAA,IACZ,GAAG;AAAA,IACH,GAAG;AAAA,IACH,IAAI;AAAA,IACJ,GAAG;AAAA,IACH,IAAI;AAAA,IACJ,GAAG;AAAA,IACH,IAAI;AAAA,IACJ,GAAG;AAAA,IACH,IAAI;AAAA,IACJ,GAAG;AAAA,IACH,IAAI;AAAA;AAER,CAAC;AAEM,mBAAmB,MAAM,OAAO,UAAU;AAC7C,SAAO,IAAI,QAAQ,aAAW;AAC1B,UAAM,WAAW,IAAI;AACrB,QAAG,SAAS,UAAS;AACjB,eAAS,cAAc,IAAI;AAAA,eACrB,SAAS,UAAS;AACxB,eAAS,kBAAkB,IAAI;AAAA;AAEnC,aAAS,SAAS,CAAC,UAAU,QAAQ,MAAM,OAAO,MAAM;AAAA,GAC3D;AACL;AAEO,oBAAoB,YAAW;AAClC,SAAOA,oBAAO,UAAU,EAAE,MAAM,IAAI;AACxC;AAEY,MAAC,gBAAgB,CAAC,cAAc;AACxC,QAAM,OAAO,CAAC,MAAM;AAChB,YAAO;AAAA,WACE;AAAK,eAAO;AAAA,WACZ;AAAK,eAAO;AAAA,WACZ;AAAK,eAAO;AAAA,WACZ;AAAK,eAAO;AAAA,WACZ;AAAK,eAAO;AAAA,WACZ;AAAK,eAAO;AAAA,WACZ;AAAK,eAAO;AAAA;AAAA;AAGzB,MAAGA,oBAAO,SAAS,EAAE,cAAcA,uBAAU,KAAK,GAAE;AACjD,WAAOA,oBAAO,SAAS,EAAE,OAAO,MAAM;AAAA,aAC/BA,oBAAO,SAAS,EAAE,cAAcA,sBAAS,SAAS,GAAG,KAAK,GAAG,KAAK,GAAE;AAC1E,WAAO,eAAKA,oBAAO,SAAS,EAAE,OAAO,MAAM;AAAA,aACrCA,oBAAO,SAAS,EAAE,cAAcA,sBAAS,SAAS,GAAG,KAAK,GAAG,KAAK,GAAE;AAC1E,WAAO,eAAK,KAAKA,oBAAO,SAAS,EAAE,OAAO,GAAG,CAAC,KAAKA,oBAAO,SAAS,EAAE,OAAO,MAAM;AAAA,SAChF;AACF,WAAOA,oBAAO,SAAS,EAAE,OAAO,+BAAgB;AAAA;;;;;"}