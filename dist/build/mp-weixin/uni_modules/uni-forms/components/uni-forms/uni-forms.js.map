{"version":3,"file":"uni-forms.js","sources":["../../../../../../../src/uni_modules/uni-forms/components/uni-forms/uni-forms.vue","../../../../../../../uniComponent:/QzovbXlzZWxmL3NvY2lhbC9zb2NpYWwvc3JjL3VuaV9tb2R1bGVzL3VuaS1mb3Jtcy9jb21wb25lbnRzL3VuaS1mb3Jtcy91bmktZm9ybXMudnVl"],"sourcesContent":["<template>\r\n\t<view class=\"uni-forms\" :class=\"{ 'uni-forms--top': !border }\">\r\n\t\t<form @submit.stop=\"submitForm\" @reset=\"resetForm\">\r\n\t\t\t<slot></slot>\r\n\t\t</form>\r\n\t</view>\r\n</template>\r\n\r\n<script>\r\n\t// #ifndef VUE3\r\n\timport Vue from 'vue';\r\n\tVue.prototype.binddata = function(name, value, formName) {\r\n\t\tif (formName) {\r\n\t\t\tthis.$refs[formName].setValue(name, value);\r\n\t\t} else {\r\n\t\t\tlet formVm;\r\n\t\t\tfor (let i in this.$refs) {\r\n\t\t\t\tconst vm = this.$refs[i];\r\n\t\t\t\tif (vm && vm.$options && vm.$options.name === 'uniForms') {\r\n\t\t\t\t\tformVm = vm;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif (!formVm) return console.error('当前 uni-froms 组件缺少 ref 属性');\r\n\t\t\tformVm.setValue(name, value);\r\n\t\t}\r\n\t};\r\n\t// #endif\r\n\r\n\r\n\r\n\timport Validator from './validate.js';\r\n\t/**\r\n\t * Forms 表单\r\n\t * @description 由输入框、选择器、单选框、多选框等控件组成，用以收集、校验、提交数据\r\n\t * @tutorial https://ext.dcloud.net.cn/plugin?id=2773\r\n\t * @property {Object} rules\t表单校验规则\r\n\t * @property {String} validateTrigger = [bind|submit]\t校验触发器方式 默认 submit\r\n\t * @value bind\t\t发生变化时触发\r\n\t * @value submit\t提交时触发\r\n\t * @property {String} labelPosition = [top|left]\tlabel 位置 默认 left\r\n\t * @value top\t\t顶部显示 label\r\n\t * @value left\t左侧显示 label\r\n\t * @property {String} labelWidth\tlabel 宽度，默认 65px\r\n\t * @property {String} labelAlign = [left|center|right]\tlabel 居中方式  默认 left\r\n\t * @value left\t\tlabel 左侧显示\r\n\t * @value center\tlabel 居中\r\n\t * @value right\t\tlabel 右侧对齐\r\n\t * @property {String} errShowType = [undertext|toast|modal]\t校验错误信息提示方式\r\n\t * @value undertext\t错误信息在底部显示\r\n\t * @value toast\t\t\t错误信息toast显示\r\n\t * @value modal\t\t\t错误信息modal显示\r\n\t * @event {Function} submit\t提交时触发\r\n\t */\r\n\r\n\texport default {\r\n\t\tname: 'uniForms',\r\n\t\tcomponents: {},\r\n\t\temits:['input','reset','validate','submit'],\r\n\t\tprops: {\r\n\t\t\t// 即将弃用\r\n\t\t\tvalue: {\r\n\t\t\t\ttype: Object,\r\n\t\t\t\tdefault () {\r\n\t\t\t\t\treturn {};\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\t// 替换 value 属性\r\n\t\t\tmodelValue: {\r\n\t\t\t\ttype: Object,\r\n\t\t\t\tdefault () {\r\n\t\t\t\t\treturn {};\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\t// 表单校验规则\r\n\t\t\trules: {\r\n\t\t\t\ttype: Object,\r\n\t\t\t\tdefault () {\r\n\t\t\t\t\treturn {};\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\t// 校验触发器方式，默认 关闭\r\n\t\t\tvalidateTrigger: {\r\n\t\t\t\ttype: String,\r\n\t\t\t\tdefault: ''\r\n\t\t\t},\r\n\t\t\t// label 位置，可选值 top/left\r\n\t\t\tlabelPosition: {\r\n\t\t\t\ttype: String,\r\n\t\t\t\tdefault: 'left'\r\n\t\t\t},\r\n\t\t\t// label 宽度，单位 px\r\n\t\t\tlabelWidth: {\r\n\t\t\t\ttype: [String, Number],\r\n\t\t\t\tdefault: ''\r\n\t\t\t},\r\n\t\t\t// label 居中方式，可选值 left/center/right\r\n\t\t\tlabelAlign: {\r\n\t\t\t\ttype: String,\r\n\t\t\t\tdefault: 'left'\r\n\t\t\t},\r\n\t\t\terrShowType: {\r\n\t\t\t\ttype: String,\r\n\t\t\t\tdefault: 'undertext'\r\n\t\t\t},\r\n\t\t\tborder: {\r\n\t\t\t\ttype: Boolean,\r\n\t\t\t\tdefault: false\r\n\t\t\t}\r\n\t\t},\r\n\t\tdata() {\r\n\t\t\treturn {\r\n\t\t\t\tformData: {}\r\n\t\t\t};\r\n\t\t},\r\n\t\tcomputed: {\r\n\t\t\tdataValue() {\r\n\t\t\t\tif (JSON.stringify(this.modelValue) === '{}') {\r\n\t\t\t\t\treturn this.value\r\n\t\t\t\t} else {\r\n\t\t\t\t\treturn this.modelValue\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\twatch: {\r\n\t\t\trules(newVal) {\r\n\t\t\t\t// 如果规则发生变化，要初始化组件\r\n\t\t\t\tthis.init(newVal);\r\n\t\t\t},\r\n\t\t\tlabelPosition() {\r\n\t\t\t\tthis.childrens.forEach(vm => {\r\n\t\t\t\t\tvm.init()\r\n\t\t\t\t})\r\n\t\t\t}\r\n\t\t},\r\n\t\tcreated() {\r\n\t\t\t// #ifdef VUE3\r\n\t\t\tlet getbinddata = getApp().$vm.$.appContext.config.globalProperties.binddata\r\n\t\t\tif (!getbinddata) {\r\n\t\t\t\tgetApp().$vm.$.appContext.config.globalProperties.binddata = function(name, value, formName) {\r\n\t\t\t\t\tif (formName) {\r\n\t\t\t\t\t\tthis.$refs[formName].setValue(name, value);\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tlet formVm;\r\n\t\t\t\t\t\tfor (let i in this.$refs) {\r\n\t\t\t\t\t\t\tconst vm = this.$refs[i];\r\n\t\t\t\t\t\t\tif (vm && vm.$options && vm.$options.name === 'uniForms') {\r\n\t\t\t\t\t\t\t\tformVm = vm;\r\n\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif (!formVm) return console.error('当前 uni-froms 组件缺少 ref 属性');\r\n\t\t\t\t\t\tformVm.setValue(name, value);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t// #endif\r\n\r\n\t\t\t// 存放watch 监听数组\r\n\t\t\tthis.unwatchs = [];\r\n\t\t\t// 存放子组件数组\r\n\t\t\tthis.childrens = [];\r\n\t\t\t// 存放 easyInput 组件\r\n\t\t\tthis.inputChildrens = [];\r\n\t\t\t// 存放 dataCheckbox 组件\r\n\t\t\tthis.checkboxChildrens = [];\r\n\t\t\t// 存放规则\r\n\t\t\tthis.formRules = [];\r\n\t\t\tthis.init(this.rules);\r\n\t\t},\r\n\t\t// mounted() {\r\n\t\t// \tthis.init(this.rules)\r\n\t\t// },\r\n\t\tmethods: {\r\n\t\t\tinit(formRules) {\r\n\t\t\t\t// 判断是否有规则\r\n\t\t\t\tif (Object.keys(formRules).length === 0) {\r\n\t\t\t\t\tthis.formData = this.dataValue\r\n\t\t\t\t\treturn\r\n\t\t\t\t};\r\n\t\t\t\tthis.formRules = formRules;\r\n\t\t\t\tthis.validator = new Validator(formRules);\r\n\t\t\t\tthis.registerWatch();\r\n\t\t\t},\r\n\t\t\t// 监听 watch\r\n\t\t\tregisterWatch() {\r\n\t\t\t\t// 取消监听,避免多次调用 init 重复执行 $watch\r\n\t\t\t\tthis.unwatchs.forEach(v => v());\r\n\t\t\t\tthis.childrens.forEach((v) => {\r\n\t\t\t\t\tv.init()\r\n\t\t\t\t})\r\n\t\t\t\t// watch 每个属性 ，需要知道具体那个属性发变化\r\n\t\t\t\tObject.keys(this.dataValue).forEach(key => {\r\n\t\t\t\t\tlet watch = this.$watch(\r\n\t\t\t\t\t\t'dataValue.' + key,\r\n\t\t\t\t\t\tvalue => {\r\n\t\t\t\t\t\t\tif (!value) return\r\n\t\t\t\t\t\t\t// 如果是对象 ，则平铺内容\r\n\t\t\t\t\t\t\tif (value.toString() === '[object Object]') {\r\n\t\t\t\t\t\t\t\tfor (let i in value) {\r\n\t\t\t\t\t\t\t\t\tlet name = `${key}[${i}]`;\r\n\t\t\t\t\t\t\t\t\tthis.formData[name] = this._getValue(name, value[i]);\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\tthis.formData[key] = this._getValue(key, value);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tdeep: true,\r\n\t\t\t\t\t\t\timmediate: true\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t);\r\n\t\t\t\t\tthis.unwatchs.push(watch);\r\n\t\t\t\t});\r\n\t\t\t},\r\n\t\t\t/**\r\n\t\t\t * 公开给用户使用\r\n\t\t\t * 设置校验规则\r\n\t\t\t * @param {Object} formRules\r\n\t\t\t */\r\n\t\t\tsetRules(formRules) {\r\n\t\t\t\tthis.init(formRules);\r\n\t\t\t},\r\n\t\t\t/**\r\n\t\t\t * 公开给用户使用\r\n\t\t\t * 设置自定义表单组件 value 值\r\n\t\t\t *  @param {String} name 字段名称\r\n\t\t\t *  @param {String} value 字段值\r\n\t\t\t */\r\n\t\t\tsetValue(name, value, callback) {\r\n\t\t\t\tlet example = this.childrens.find(child => child.name === name);\r\n\t\t\t\tif (!example) return null;\r\n\t\t\t\tvalue = this._getValue(example.name, value);\r\n\t\t\t\tthis.formData[name] = value;\r\n\t\t\t\texample.val = value;\r\n\t\t\t\treturn example.triggerCheck(value, callback);\r\n\t\t\t},\r\n\r\n\t\t\t/**\r\n\t\t\t * 表单重置\r\n\t\t\t * @param {Object} event\r\n\t\t\t */\r\n\t\t\tresetForm(event) {\r\n\t\t\t\tthis.childrens.forEach(item => {\r\n\t\t\t\t\titem.errMsg = '';\r\n\t\t\t\t\tconst inputComp = this.inputChildrens.find(child => child.rename === item.name);\r\n\t\t\t\t\tif (inputComp) {\r\n\t\t\t\t\t\tinputComp.errMsg = '';\r\n\t\t\t\t\t\t// fix by mehaotian 不触发其他组件的 setValue\r\n\t\t\t\t\t\tinputComp.is_reset = true\r\n\t\t\t\t\t\tinputComp.$emit('input', inputComp.multiple ? [] : '');\r\n\t\t\t\t\t\tinputComp.$emit('update:modelValue', inputComp.multiple ? [] : '');\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\r\n\t\t\t\tthis.childrens.forEach(item => {\r\n\t\t\t\t\tif (item.name) {\r\n\t\t\t\t\t\tthis.formData[item.name] = this._getValue(item.name, '');\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\r\n\t\t\t\tthis.$emit('reset', event);\r\n\t\t\t},\r\n\r\n\t\t\t/**\r\n\t\t\t * 触发表单校验，通过 @validate 获取\r\n\t\t\t * @param {Object} validate\r\n\t\t\t */\r\n\t\t\tvalidateCheck(validate) {\r\n\t\t\t\tif (validate === null) validate = null;\r\n\t\t\t\tthis.$emit('validate', validate);\r\n\t\t\t},\r\n\t\t\t/**\r\n\t\t\t * 校验所有或者部分表单\r\n\t\t\t */\r\n\t\t\tasync validateAll(invalidFields, type, keepitem, callback) {\r\n\t\t\t\tlet childrens = []\r\n\t\t\t\tfor (let i in invalidFields) {\r\n\t\t\t\t\tconst item = this.childrens.find(v => v.name === i)\r\n\t\t\t\t\tif (item) {\r\n\t\t\t\t\t\tchildrens.push(item)\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (!callback && typeof keepitem === 'function') {\r\n\t\t\t\t\tcallback = keepitem;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tlet promise;\r\n\t\t\t\tif (!callback && typeof callback !== 'function' && Promise) {\r\n\t\t\t\t\tpromise = new Promise((resolve, reject) => {\r\n\t\t\t\t\t\tcallback = function(valid, invalidFields) {\r\n\t\t\t\t\t\t\t!valid ? resolve(invalidFields) : reject(valid);\r\n\t\t\t\t\t\t};\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\r\n\t\t\t\tlet results = [];\r\n\t\t\t\tlet newFormData = {};\r\n\t\t\t\tif (this.validator) {\r\n\t\t\t\t\tfor (let key in childrens) {\r\n\t\t\t\t\t\tconst child = childrens[key];\r\n\t\t\t\t\t\tlet name = child.isArray ? child.arrayField : child.name;\r\n\t\t\t\t\t\tif (child.isArray) {\r\n\t\t\t\t\t\t\tif (child.name.indexOf('[') !== -1 && child.name.indexOf(']') !== -1) {\r\n\t\t\t\t\t\t\t\tconst fieldData = child.name.split('[');\r\n\t\t\t\t\t\t\t\tconst fieldName = fieldData[0];\r\n\t\t\t\t\t\t\t\tconst fieldValue = fieldData[1].replace(']', '');\r\n\t\t\t\t\t\t\t\tif (!newFormData[fieldName]) {\r\n\t\t\t\t\t\t\t\t\tnewFormData[fieldName] = {};\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\tnewFormData[fieldName][fieldValue] = this._getValue(name, invalidFields[name]);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tnewFormData[name] = this._getValue(name, invalidFields[name]);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tconst result = await child.triggerCheck(invalidFields[name], true);\r\n\t\t\t\t\t\tif (result) {\r\n\t\t\t\t\t\t\tresults.push(result);\r\n\t\t\t\t\t\t\tif (this.errShowType === 'toast' || this.errShowType === 'modal') break;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\tnewFormData = invalidFields\r\n\t\t\t\t}\r\n\t\t\t\tif (Array.isArray(results)) {\r\n\t\t\t\t\tif (results.length === 0) results = null;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (Array.isArray(keepitem)) {\r\n\t\t\t\t\tkeepitem.forEach(v => {\r\n\t\t\t\t\t\tnewFormData[v] = this.dataValue[v];\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (type === 'submit') {\r\n\t\t\t\t\tthis.$emit('submit', {\r\n\t\t\t\t\t\tdetail: {\r\n\t\t\t\t\t\t\tvalue: newFormData,\r\n\t\t\t\t\t\t\terrors: results\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t});\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis.$emit('validate', results);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tcallback && typeof callback === 'function' && callback(results, newFormData);\r\n\r\n\t\t\t\tif (promise && callback) {\r\n\t\t\t\t\treturn promise;\r\n\t\t\t\t} else {\r\n\t\t\t\t\treturn null;\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tsubmitForm() {},\r\n\t\t\t/**\r\n\t\t\t * 外部调用方法\r\n\t\t\t * 手动提交校验表单\r\n\t\t\t * 对整个表单进行校验的方法，参数为一个回调函数。\r\n\t\t\t */\r\n\t\t\tsubmit(keepitem, callback, type) {\r\n\t\t\t\tfor (let i in this.dataValue) {\r\n\t\t\t\t\tconst itemData = this.childrens.find(v => v.name === i);\r\n\t\t\t\t\tif (itemData) {\r\n\t\t\t\t\t\tif (this.formData[i] === undefined) {\r\n\t\t\t\t\t\t\tthis.formData[i] = this._getValue(i, this.dataValue[i]);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tif (!type) {\r\n\t\t\t\t\tconsole.warn('submit 方法即将废弃，请使用validate方法代替！');\r\n\t\t\t\t}\r\n\t\t\t\treturn this.validateAll(this.formData, 'submit', keepitem, callback);\r\n\t\t\t},\r\n\r\n\t\t\t/**\r\n\t\t\t * 外部调用方法\r\n\t\t\t * 校验表单\r\n\t\t\t * 对整个表单进行校验的方法，参数为一个回调函数。\r\n\t\t\t */\r\n\t\t\tvalidate(keepitem, callback) {\r\n\t\t\t\treturn this.submit(keepitem, callback, true);\r\n\t\t\t},\r\n\r\n\t\t\t/**\r\n\t\t\t * 部分表单校验\r\n\t\t\t * @param {Object} props\r\n\t\t\t * @param {Object} cb\r\n\t\t\t */\r\n\t\t\tvalidateField(props, callback) {\r\n\t\t\t\tprops = [].concat(props);\r\n\t\t\t\tlet invalidFields = {};\r\n\t\t\t\tthis.childrens.forEach(item => {\r\n\t\t\t\t\tif (props.indexOf(item.name) !== -1) {\r\n\t\t\t\t\t\tinvalidFields = Object.assign({}, invalidFields, {\r\n\t\t\t\t\t\t\t[item.name]: this.formData[item.name]\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t\treturn this.validateAll(invalidFields, 'submit', [], callback);\r\n\t\t\t},\r\n\r\n\t\t\t/**\r\n\t\t\t * 对整个表单进行重置，将所有字段值重置为初始值并移除校验结果\r\n\t\t\t */\r\n\t\t\tresetFields() {\r\n\t\t\t\tthis.resetForm();\r\n\t\t\t},\r\n\r\n\t\t\t/**\r\n\t\t\t * 移除表单项的校验结果。传入待移除的表单项的 prop 属性或者 prop 组成的数组，如不传则移除整个表单的校验结果\r\n\t\t\t */\r\n\t\t\tclearValidate(props) {\r\n\t\t\t\tprops = [].concat(props);\r\n\t\t\t\tthis.childrens.forEach(item => {\r\n\t\t\t\t\tconst inputComp = this.inputChildrens.find(child => child.rename === item.name);\r\n\t\t\t\t\tif (props.length === 0) {\r\n\t\t\t\t\t\titem.errMsg = '';\r\n\t\t\t\t\t\tif (inputComp) {\r\n\t\t\t\t\t\t\tinputComp.errMsg = '';\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tif (props.indexOf(item.name) !== -1) {\r\n\t\t\t\t\t\t\titem.errMsg = '';\r\n\t\t\t\t\t\t\tif (inputComp) {\r\n\t\t\t\t\t\t\t\tinputComp.errMsg = '';\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t},\r\n\t\t\t/**\r\n\t\t\t * 把 value 转换成指定的类型\r\n\t\t\t * @param {Object} key\r\n\t\t\t * @param {Object} value\r\n\t\t\t */\r\n\t\t\t_getValue(key, value) {\r\n\t\t\t\tconst rules = (this.formRules[key] && this.formRules[key].rules) || [];\r\n\t\t\t\tconst isRuleNum = rules.find(val => val.format && this.type_filter(val.format));\r\n\t\t\t\tconst isRuleBool = rules.find(val => (val.format && val.format === 'boolean') || val.format === 'bool');\r\n\t\t\t\t// 输入值为 number\r\n\t\t\t\tif (isRuleNum) {\r\n\t\t\t\t\tvalue = isNaN(value) ? value : value === '' || value === null ? null : Number(value);\r\n\t\t\t\t}\r\n\t\t\t\t// 简单判断真假值\r\n\t\t\t\tif (isRuleBool) {\r\n\t\t\t\t\tvalue = !value ? false : true;\r\n\t\t\t\t}\r\n\t\t\t\treturn value;\r\n\t\t\t},\r\n\t\t\t/**\r\n\t\t\t * 过滤数字类型\r\n\t\t\t * @param {Object} format\r\n\t\t\t */\r\n\t\t\ttype_filter(format) {\r\n\t\t\t\treturn format === 'int' || format === 'double' || format === 'number' || format === 'timestamp';\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n</script>\r\n\r\n<style lang=\"scss\" >\r\n\t.uni-forms {\r\n\t\t// overflow: hidden;\r\n\t\t// padding: 10px 15px;\r\n\t}\r\n\r\n\t.uni-forms--top {\r\n\t\t// padding: 10px 15px;\r\n\t\t// padding-top: 22px;\r\n\t}\r\n</style>\r\n","import Component from 'C:/myself/social/social/src/uni_modules/uni-forms/components/uni-forms/uni-forms.vue'\nwx.createComponent(Component)"],"names":["name","components","emits","props","value","type","Object","default","modelValue","rules","validateTrigger","String","labelPosition","labelWidth","Number","labelAlign","errShowType","border","Boolean","data","formData","computed","dataValue","JSON","stringify","this","watch","newVal","init","childrens","forEach","created","getApp","$vm","$","appContext","config","globalProperties","binddata","formName","$refs","setValue","formVm","i","vm","$options","console","error","unwatchs","inputChildrens","checkboxChildrens","formRules","methods","keys","length","validator","Validator","registerWatch","v","$watch","key","toString","_getValue","deep","immediate","push","setRules","callback","example","find","child","val","triggerCheck","resetForm","event","errMsg","inputComp","rename","item","is_reset","$emit","multiple","validateCheck","validate","async","invalidFields","keepitem","promise","Promise","resolve","reject","valid","invalidFields2","results","newFormData","isArray","arrayField","indexOf","fieldData","split","fieldName","fieldValue","replace","result","Array","detail","errors","submitForm","submit","warn","validateAll","validateField","concat","assign","resetFields","clearValidate","isRuleNum","format","type_filter","isRuleBool","isNaN","wx","createComponent","Component"],"mappings":"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"}