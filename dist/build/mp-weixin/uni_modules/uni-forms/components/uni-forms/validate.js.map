{"version":3,"file":"validate.js","sources":["../../../../../../../src/uni_modules/uni-forms/components/uni-forms/validate.js"],"sourcesContent":["var pattern = {\r\n\temail: /^\\S+?@\\S+?\\.\\S+?$/,\r\n\tidcard: /^[1-9]\\d{5}(18|19|([23]\\d))\\d{2}((0[1-9])|(10|11|12))(([0-2][1-9])|10|20|30|31)\\d{3}[0-9Xx]$/,\r\n\turl: new RegExp(\r\n\t\t\"^(?!mailto:)(?:(?:http|https|ftp)://|//)(?:\\\\S+(?::\\\\S*)?@)?(?:(?:(?:[1-9]\\\\d?|1\\\\d\\\\d|2[01]\\\\d|22[0-3])(?:\\\\.(?:1?\\\\d{1,2}|2[0-4]\\\\d|25[0-5])){2}(?:\\\\.(?:[0-9]\\\\d?|1\\\\d\\\\d|2[0-4]\\\\d|25[0-4]))|(?:(?:[a-z\\\\u00a1-\\\\uffff0-9]+-*)*[a-z\\\\u00a1-\\\\uffff0-9]+)(?:\\\\.(?:[a-z\\\\u00a1-\\\\uffff0-9]+-*)*[a-z\\\\u00a1-\\\\uffff0-9]+)*(?:\\\\.(?:[a-z\\\\u00a1-\\\\uffff]{2,})))|localhost)(?::\\\\d{2,5})?(?:(/|\\\\?|#)[^\\\\s]*)?$\",\r\n\t\t'i')\r\n};\r\n\r\nconst FORMAT_MAPPING = {\r\n\t\"int\": 'integer',\r\n\t\"bool\": 'boolean',\r\n\t\"double\": 'number',\r\n\t\"long\": 'number',\r\n\t\"password\": 'string'\r\n\t// \"fileurls\": 'array'\r\n}\r\n\r\nfunction formatMessage(args, resources = '') {\r\n\tvar defaultMessage = ['label']\r\n\tdefaultMessage.forEach((item) => {\r\n\t\tif (args[item] === undefined) {\r\n\t\t\targs[item] = ''\r\n\t\t}\r\n\t})\r\n\r\n\tlet str = resources\r\n\tfor (let key in args) {\r\n\t\tlet reg = new RegExp('{' + key + '}')\r\n\t\tstr = str.replace(reg, args[key])\r\n\t}\r\n\treturn str\r\n}\r\n\r\nfunction isEmptyValue(value, type) {\r\n\tif (value === undefined || value === null) {\r\n\t\treturn true;\r\n\t}\r\n\r\n\tif (typeof value === 'string' && !value) {\r\n\t\treturn true;\r\n\t}\r\n\r\n\tif (Array.isArray(value) && !value.length) {\r\n\t\treturn true;\r\n\t}\r\n\r\n\tif (type === 'object' && !Object.keys(value).length) {\r\n\t\treturn true;\r\n\t}\r\n\r\n\treturn false;\r\n}\r\n\r\nconst types = {\r\n\tinteger(value) {\r\n\t\treturn types.number(value) && parseInt(value, 10) === value;\r\n\t},\r\n\tstring(value) {\r\n\t\treturn typeof value === 'string';\r\n\t},\r\n\tnumber(value) {\r\n\t\tif (isNaN(value)) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\treturn typeof value === 'number';\r\n\t},\r\n\t\"boolean\": function(value) {\r\n\t\treturn typeof value === 'boolean';\r\n\t},\r\n\t\"float\": function(value) {\r\n\t\treturn types.number(value) && !types.integer(value);\r\n\t},\r\n\tarray(value) {\r\n\t\treturn Array.isArray(value);\r\n\t},\r\n\tobject(value) {\r\n\t\treturn typeof value === 'object' && !types.array(value);\r\n\t},\r\n\tdate(value) {\r\n\t\treturn value instanceof Date;\r\n\t},\r\n\ttimestamp(value) {\r\n\t\tif (!this.integer(value) || Math.abs(value).toString().length > 16) {\r\n\t\t\treturn false\r\n\t\t}\r\n\t\treturn true;\r\n\t},\r\n\tfile(value) {\r\n\t\treturn typeof value.url === 'string';\r\n\t},\r\n\temail(value) {\r\n\t\treturn typeof value === 'string' && !!value.match(pattern.email) && value.length < 255;\r\n\t},\r\n\turl(value) {\r\n\t\treturn typeof value === 'string' && !!value.match(pattern.url);\r\n\t},\r\n\tpattern(reg, value) {\r\n\t\ttry {\r\n\t\t\treturn new RegExp(reg).test(value);\r\n\t\t} catch (e) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\t},\r\n\tmethod(value) {\r\n\t\treturn typeof value === 'function';\r\n\t},\r\n\tidcard(value) {\r\n\t\treturn typeof value === 'string' && !!value.match(pattern.idcard);\r\n\t},\r\n\t'url-https'(value) {\r\n\t\treturn this.url(value) && value.startsWith('https://');\r\n\t},\r\n\t'url-scheme'(value) {\r\n\t\treturn value.startsWith('://');\r\n\t},\r\n\t'url-web'(value) {\r\n\t\treturn false;\r\n\t}\r\n}\r\n\r\nclass RuleValidator {\r\n\r\n\tconstructor(message) {\r\n\t\tthis._message = message\r\n\t}\r\n\r\n\tasync validateRule(fieldKey, fieldValue, value, data, allData) {\r\n\t\tvar result = null\r\n\r\n\t\tlet rules = fieldValue.rules\r\n\r\n\t\tlet hasRequired = rules.findIndex((item) => {\r\n\t\t\treturn item.required\r\n\t\t})\r\n\t\tif (hasRequired < 0) {\r\n\t\t\tif (value === null || value === undefined) {\r\n\t\t\t\treturn result\r\n\t\t\t}\r\n\t\t\tif (typeof value === 'string' && !value.length) {\r\n\t\t\t\treturn result\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tvar message = this._message\r\n\r\n\t\tif (rules === undefined) {\r\n\t\t\treturn message['default']\r\n\t\t}\r\n\r\n\t\tfor (var i = 0; i < rules.length; i++) {\r\n\t\t\tlet rule = rules[i]\r\n\t\t\tlet vt = this._getValidateType(rule)\r\n\r\n\t\t\tObject.assign(rule, {\r\n\t\t\t\tlabel: fieldValue.label || `[\"${fieldKey}\"]`\r\n\t\t\t})\r\n\r\n\t\t\tif (RuleValidatorHelper[vt]) {\r\n\t\t\t\tresult = RuleValidatorHelper[vt](rule, value, message)\r\n\t\t\t\tif (result != null) {\r\n\t\t\t\t\tbreak\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif (rule.validateExpr) {\r\n\t\t\t\tlet now = Date.now()\r\n\t\t\t\tlet resultExpr = rule.validateExpr(value, allData, now)\r\n\t\t\t\tif (resultExpr === false) {\r\n\t\t\t\t\tresult = this._getMessage(rule, rule.errorMessage || this._message['default'])\r\n\t\t\t\t\tbreak\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif (rule.validateFunction) {\r\n\t\t\t\tresult = await this.validateFunction(rule, value, data, allData, vt)\r\n\t\t\t\tif (result !== null) {\r\n\t\t\t\t\tbreak\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (result !== null) {\r\n\t\t\tresult = message.TAG + result\r\n\t\t}\r\n\r\n\t\treturn result\r\n\t}\r\n\r\n\tasync validateFunction(rule, value, data, allData, vt) {\r\n\t\tlet result = null\r\n\t\ttry {\r\n\t\t\tlet callbackMessage = null\r\n\t\t\tconst res = await rule.validateFunction(rule, value, allData || data, (message) => {\r\n\t\t\t\tcallbackMessage = message\r\n\t\t\t})\r\n\t\t\tif (callbackMessage || (typeof res === 'string' && res) || res === false) {\r\n\t\t\t\tresult = this._getMessage(rule, callbackMessage || res, vt)\r\n\t\t\t}\r\n\t\t} catch (e) {\r\n\t\t\tresult = this._getMessage(rule, e.message, vt)\r\n\t\t}\r\n\t\treturn result\r\n\t}\r\n\r\n\t_getMessage(rule, message, vt) {\r\n\t\treturn formatMessage(rule, message || rule.errorMessage || this._message[vt] || message['default'])\r\n\t}\r\n\r\n\t_getValidateType(rule) {\r\n\t\tvar result = ''\r\n\t\tif (rule.required) {\r\n\t\t\tresult = 'required'\r\n\t\t} else if (rule.format) {\r\n\t\t\tresult = 'format'\r\n\t\t} else if (rule.arrayType) {\r\n\t\t\tresult = 'arrayTypeFormat'\r\n\t\t} else if (rule.range) {\r\n\t\t\tresult = 'range'\r\n\t\t} else if (rule.maximum !== undefined || rule.minimum !== undefined) {\r\n\t\t\tresult = 'rangeNumber'\r\n\t\t} else if (rule.maxLength !== undefined || rule.minLength !== undefined) {\r\n\t\t\tresult = 'rangeLength'\r\n\t\t} else if (rule.pattern) {\r\n\t\t\tresult = 'pattern'\r\n\t\t} else if (rule.validateFunction) {\r\n\t\t\tresult = 'validateFunction'\r\n\t\t}\r\n\t\treturn result\r\n\t}\r\n}\r\n\r\nconst RuleValidatorHelper = {\r\n\trequired(rule, value, message) {\r\n\t\tif (rule.required && isEmptyValue(value, rule.format || typeof value)) {\r\n\t\t\treturn formatMessage(rule, rule.errorMessage || message.required);\r\n\t\t}\r\n\r\n\t\treturn null\r\n\t},\r\n\r\n\trange(rule, value, message) {\r\n\t\tconst {\r\n\t\t\trange,\r\n\t\t\terrorMessage\r\n\t\t} = rule;\r\n\r\n\t\tlet list = new Array(range.length);\r\n\t\tfor (let i = 0; i < range.length; i++) {\r\n\t\t\tconst item = range[i];\r\n\t\t\tif (types.object(item) && item.value !== undefined) {\r\n\t\t\t\tlist[i] = item.value;\r\n\t\t\t} else {\r\n\t\t\t\tlist[i] = item;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tlet result = false\r\n\t\tif (Array.isArray(value)) {\r\n\t\t\tresult = (new Set(value.concat(list)).size === list.length);\r\n\t\t} else {\r\n\t\t\tif (list.indexOf(value) > -1) {\r\n\t\t\t\tresult = true;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (!result) {\r\n\t\t\treturn formatMessage(rule, errorMessage || message['enum']);\r\n\t\t}\r\n\r\n\t\treturn null\r\n\t},\r\n\r\n\trangeNumber(rule, value, message) {\r\n\t\tif (!types.number(value)) {\r\n\t\t\treturn formatMessage(rule, rule.errorMessage || message.pattern.mismatch);\r\n\t\t}\r\n\r\n\t\tlet {\r\n\t\t\tminimum,\r\n\t\t\tmaximum,\r\n\t\t\texclusiveMinimum,\r\n\t\t\texclusiveMaximum\r\n\t\t} = rule;\r\n\t\tlet min = exclusiveMinimum ? value <= minimum : value < minimum;\r\n\t\tlet max = exclusiveMaximum ? value >= maximum : value > maximum;\r\n\r\n\t\tif (minimum !== undefined && min) {\r\n\t\t\treturn formatMessage(rule, rule.errorMessage || message['number'][exclusiveMinimum ?\r\n\t\t\t\t'exclusiveMinimum' : 'minimum'\r\n\t\t\t])\r\n\t\t} else if (maximum !== undefined && max) {\r\n\t\t\treturn formatMessage(rule, rule.errorMessage || message['number'][exclusiveMaximum ?\r\n\t\t\t\t'exclusiveMaximum' : 'maximum'\r\n\t\t\t])\r\n\t\t} else if (minimum !== undefined && maximum !== undefined && (min || max)) {\r\n\t\t\treturn formatMessage(rule, rule.errorMessage || message['number'].range)\r\n\t\t}\r\n\r\n\t\treturn null\r\n\t},\r\n\r\n\trangeLength(rule, value, message) {\r\n\t\tif (!types.string(value) && !types.array(value)) {\r\n\t\t\treturn formatMessage(rule, rule.errorMessage || message.pattern.mismatch);\r\n\t\t}\r\n\r\n\t\tlet min = rule.minLength;\r\n\t\tlet max = rule.maxLength;\r\n\t\tlet val = value.length;\r\n\r\n\t\tif (min !== undefined && val < min) {\r\n\t\t\treturn formatMessage(rule, rule.errorMessage || message['length'].minLength)\r\n\t\t} else if (max !== undefined && val > max) {\r\n\t\t\treturn formatMessage(rule, rule.errorMessage || message['length'].maxLength)\r\n\t\t} else if (min !== undefined && max !== undefined && (val < min || val > max)) {\r\n\t\t\treturn formatMessage(rule, rule.errorMessage || message['length'].range)\r\n\t\t}\r\n\r\n\t\treturn null\r\n\t},\r\n\r\n\tpattern(rule, value, message) {\r\n\t\tif (!types['pattern'](rule.pattern, value)) {\r\n\t\t\treturn formatMessage(rule, rule.errorMessage || message.pattern.mismatch);\r\n\t\t}\r\n\r\n\t\treturn null\r\n\t},\r\n\r\n\tformat(rule, value, message) {\r\n\t\tvar customTypes = Object.keys(types);\r\n\t\tvar format = FORMAT_MAPPING[rule.format] ? FORMAT_MAPPING[rule.format] : (rule.format || rule.arrayType);\r\n\r\n\t\tif (customTypes.indexOf(format) > -1) {\r\n\t\t\tif (!types[format](value)) {\r\n\t\t\t\treturn formatMessage(rule, rule.errorMessage || message.typeError);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn null\r\n\t},\r\n\r\n\tarrayTypeFormat(rule, value, message) {\r\n\t\tif (!Array.isArray(value)) {\r\n\t\t\treturn formatMessage(rule, rule.errorMessage || message.typeError);\r\n\t\t}\r\n\r\n\t\tfor (let i = 0; i < value.length; i++) {\r\n\t\t\tconst element = value[i];\r\n\t\t\tlet formatResult = this.format(rule, element, message)\r\n\t\t\tif (formatResult !== null) {\r\n\t\t\t\treturn formatResult\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn null\r\n\t}\r\n}\r\n\r\nclass SchemaValidator extends RuleValidator {\r\n\r\n\tconstructor(schema, options) {\r\n\t\tsuper(SchemaValidator.message);\r\n\r\n\t\tthis._schema = schema\r\n\t\tthis._options = options || null\r\n\t}\r\n\r\n\tupdateSchema(schema) {\r\n\t\tthis._schema = schema\r\n\t}\r\n\r\n\tasync validate(data, allData) {\r\n\t\tlet result = this._checkFieldInSchema(data)\r\n\t\tif (!result) {\r\n\t\t\tresult = await this.invokeValidate(data, false, allData)\r\n\t\t}\r\n\t\treturn result.length ? result[0] : null\r\n\t}\r\n\r\n\tasync validateAll(data, allData) {\r\n\t\tlet result = this._checkFieldInSchema(data)\r\n\t\tif (!result) {\r\n\t\t\tresult = await this.invokeValidate(data, true, allData)\r\n\t\t}\r\n\t\treturn result\r\n\t}\r\n\r\n\tasync validateUpdate(data, allData) {\r\n\t\tlet result = this._checkFieldInSchema(data)\r\n\t\tif (!result) {\r\n\t\t\tresult = await this.invokeValidateUpdate(data, false, allData)\r\n\t\t}\r\n\t\treturn result.length ? result[0] : null\r\n\t}\r\n\r\n\tasync invokeValidate(data, all, allData) {\r\n\t\tlet result = []\r\n\t\tlet schema = this._schema\r\n\t\tfor (let key in schema) {\r\n\t\t\tlet value = schema[key]\r\n\t\t\tlet errorMessage = await this.validateRule(key, value, data[key], data, allData)\r\n\t\t\tif (errorMessage != null) {\r\n\t\t\t\tresult.push({\r\n\t\t\t\t\tkey,\r\n\t\t\t\t\terrorMessage\r\n\t\t\t\t})\r\n\t\t\t\tif (!all) break\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn result\r\n\t}\r\n\r\n\tasync invokeValidateUpdate(data, all, allData) {\r\n\t\tlet result = []\r\n\t\tfor (let key in data) {\r\n\t\t\tlet errorMessage = await this.validateRule(key, this._schema[key], data[key], data, allData)\r\n\t\t\tif (errorMessage != null) {\r\n\t\t\t\tresult.push({\r\n\t\t\t\t\tkey,\r\n\t\t\t\t\terrorMessage\r\n\t\t\t\t})\r\n\t\t\t\tif (!all) break\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn result\r\n\t}\r\n\r\n\t_checkFieldInSchema(data) {\r\n\t\tvar keys = Object.keys(data)\r\n\t\tvar keys2 = Object.keys(this._schema)\r\n\t\tif (new Set(keys.concat(keys2)).size === keys2.length) {\r\n\t\t\treturn ''\r\n\t\t}\r\n\r\n\t\tvar noExistFields = keys.filter((key) => {\r\n\t\t\treturn keys2.indexOf(key) < 0;\r\n\t\t})\r\n\t\tvar errorMessage = formatMessage({\r\n\t\t\tfield: JSON.stringify(noExistFields)\r\n\t\t}, SchemaValidator.message.TAG + SchemaValidator.message['defaultInvalid'])\r\n\t\treturn [{\r\n\t\t\tkey: 'invalid',\r\n\t\t\terrorMessage\r\n\t\t}]\r\n\t}\r\n}\r\n\r\nfunction Message() {\r\n\treturn {\r\n\t\tTAG: \"\",\r\n\t\tdefault: '验证错误',\r\n\t\tdefaultInvalid: '提交的字段{field}在数据库中并不存在',\r\n\t\tvalidateFunction: '验证无效',\r\n\t\trequired: '{label}必填',\r\n\t\t'enum': '{label}超出范围',\r\n\t\ttimestamp: '{label}格式无效',\r\n\t\twhitespace: '{label}不能为空',\r\n\t\ttypeError: '{label}类型无效',\r\n\t\tdate: {\r\n\t\t\tformat: '{label}日期{value}格式无效',\r\n\t\t\tparse: '{label}日期无法解析,{value}无效',\r\n\t\t\tinvalid: '{label}日期{value}无效'\r\n\t\t},\r\n\t\tlength: {\r\n\t\t\tminLength: '{label}长度不能少于{minLength}',\r\n\t\t\tmaxLength: '{label}长度不能超过{maxLength}',\r\n\t\t\trange: '{label}必须介于{minLength}和{maxLength}之间'\r\n\t\t},\r\n\t\tnumber: {\r\n\t\t\tminimum: '{label}不能小于{minimum}',\r\n\t\t\tmaximum: '{label}不能大于{maximum}',\r\n\t\t\texclusiveMinimum: '{label}不能小于等于{minimum}',\r\n\t\t\texclusiveMaximum: '{label}不能大于等于{maximum}',\r\n\t\t\trange: '{label}必须介于{minimum}and{maximum}之间'\r\n\t\t},\r\n\t\tpattern: {\r\n\t\t\tmismatch: '{label}格式不匹配'\r\n\t\t}\r\n\t};\r\n}\r\n\r\n\r\nSchemaValidator.message = new Message();\r\n\r\nexport default SchemaValidator\n"],"names":["pattern","email","idcard","url","RegExp","FORMAT_MAPPING","int","bool","double","long","password","args","resources","forEach","item","str","key","reg","replace","types","integer","value","number","parseInt","string","isNaN","boolean","float","array","Array","isArray","object","date","Date","timestamp","this","Math","abs","toString","length","file","match","test","e","method","startsWith","RuleValidatorHelper","required","rule","message","type","Object","keys","isEmptyValue","format","formatMessage","errorMessage","range","list","i","result","Set","concat","size","indexOf","rangeNumber","mismatch","minimum","maximum","exclusiveMinimum","exclusiveMaximum","min","max","rangeLength","minLength","maxLength","val","customTypes","arrayType","typeError","arrayTypeFormat","element","formatResult","SchemaValidator","constructor","_message","async","fieldKey","fieldValue","data","allData","rules","findIndex","vt","_getValidateType","assign","label","validateExpr","now","_getMessage","validateFunction","TAG","callbackMessage","res","schema","options","_schema","_options","updateSchema","_checkFieldInSchema","invokeValidate","invokeValidateUpdate","all","validateRule","push","keys2","noExistFields","filter","field","JSON","stringify","default","defaultInvalid","enum","whitespace","parse","invalid"],"mappings":"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"}