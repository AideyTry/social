{"version":3,"file":"im.js","sources":["../../../../src/utils/im.js"],"sourcesContent":["/*\r\n * @Author: Aiden(戴林波)\r\n * @Date: 2022-05-11 22:49:17\r\n * @LastEditTime: 2022-05-15 14:26:02\r\n * @LastEditors: Aiden(戴林波)\r\n * @Description: \r\n * @Email: jason_dlb@sina.cn\r\n */\r\nimport {\r\n  imRegister,\r\n  imLogin\r\n} from \"@/api/im.js\";\r\nimport {\r\n  setIMToken\r\n} from \"@/utils/auth.js\";\r\nimport {\r\n  setTotalIM\r\n} from \"@/utils/storage.js\";\r\nimport openIM from \"@/utils/openIM.js\";\r\n\r\n\r\nconst unReadMessage = () => {\r\n  openIM\r\n    .getTotalUnreadMsgCount()\r\n    .then(({\r\n      data\r\n    }) => {\r\n      console.log(\"data==================================================================================\", data);\r\n      console.log('Number(data)=', Number(data))\r\n      // uni.$emit('updateIMMsgCount',{total: Number(data)})\r\n      setTotalIM(Number(data))\r\n    })\r\n    .catch((err) => {\r\n      console.log(\"err=\", err);\r\n    });\r\n};\r\n\r\nconst monitorOnRecv = () => {\r\n  openIM.on(\"OnRecvNewMessage\", (data) => {\r\n    const RecvMessage = JSON.parse(data.data);\r\n    if (RecvMessage.contentType === 101) {\r\n      unReadMessage()\r\n    }\r\n  });\r\n};\r\n\r\nexport const connectIM = (userID, token) => {\r\n  console.log(\"userID, token=====================\", userID, token);\r\n  const config = {\r\n    userID,\r\n    token,\r\n    // url: \"ws://42.192.229.151/:10003\",\r\n    url: \"wss://mancao.social:20038\",\r\n    platformID: 5,\r\n  };\r\n  openIM\r\n    .login(config)\r\n    .then((res) => {\r\n      console.log(\"login suc...\", res);\r\n      if (res.errCode === 0) {\r\n        unReadMessage()\r\n        monitorOnRecv()\r\n      }\r\n    })\r\n    .catch((err) => {\r\n      console.log(\"login failed...\", err);\r\n    });\r\n}\r\n\r\nexport const register = () => {\r\n  const params = {\r\n    secret: \"tuoyun\",\r\n    platform: 5,\r\n    operationID: Date.now() + \"\",\r\n  };\r\n  imRegister(params).then((res) => {\r\n    console.log(\"res========\", res);\r\n    if (res.statusCode === 200) {\r\n      console.log('res.data.data.token====', res.data.data.token)\r\n      setIMToken(res.data.data.token);\r\n      // connectIM(res.data.data.userID, res.data.data.token);\r\n    }\r\n  });\r\n};\r\nexport const login = () => {\r\n  const params = {\r\n    secret: \"tuoyun\",\r\n    platform: 5,\r\n    operationID: Date.now() + \"\",\r\n  };\r\n  imLogin(params).then((res) => {\r\n    console.log(\"res========\", res);\r\n    if (res.statusCode === 200) {\r\n      if (res.data.errCode !== 0) {\r\n        register();\r\n        return;\r\n      }\r\n      if (res.data.data.token) {\r\n        console.log('res.data.data.token=', res.data)\r\n        setIMToken(res.data.data.token);\r\n        connectIM(res.data.data.userID, res.data.data.token)\r\n      }\r\n      // connectIM(res.data.data.userID, res.data.data.token);\r\n    }\r\n  });\r\n};"],"names":["unReadMessage","getTotalUnreadMsgCount","then","data","log","Number","catch","err","connectIM","userID","token","config","url","platformID","login","res","errCode","on","JSON","parse","contentType","params","secret","platform","operationID","Date","now","statusCode"],"mappings":"qHAqBA,MAAMA,EAAgB,cAEjBC,yBACAC,MAAK,EACJC,KAAAA,cAEQC,IAAI,yFAA0FD,WAC9FC,IAAI,gBAAiBC,OAAOF,iBAEzBE,OAAOF,OAEnBG,OAAOC,YACEH,IAAI,OAAQG,OAabC,EAAY,CAACC,EAAQC,aACxBN,IAAI,qCAAsCK,EAAQC,SACpDC,EAAS,CACbF,OAAAA,EACAC,MAAAA,EAEAE,IAAK,4BACLC,WAAY,YAGXC,MAAMH,GACNT,MAAMa,YACGX,IAAI,eAAgBW,GACR,IAAhBA,EAAIC,uBArBLC,GAAG,oBAAqBd,IAEG,MADZe,KAAKC,MAAMhB,EAAKA,MACpBiB,wBAwBfd,OAAOC,YACEH,IAAI,kBAAmBG,qBAmBhB,WACbc,EAAS,CACbC,OAAQ,SACRC,SAAU,EACVC,YAAaC,KAAKC,MAAQ,cAEpBL,GAAQnB,MAAMa,eACZX,IAAI,cAAeW,GACJ,MAAnBA,EAAIY,WAAoB,IACD,IAArBZ,EAAIZ,KAAKa,mBAxBK,YAChBK,EAAS,CACbC,OAAQ,SACRC,SAAU,EACVC,YAAaC,KAAKC,MAAQ,iBAEjBL,GAAQnB,MAAMa,YACfX,IAAI,cAAeW,GACJ,MAAnBA,EAAIY,qBACEvB,IAAI,0BAA2BW,EAAIZ,KAAKA,KAAKO,oBAC1CK,EAAIZ,KAAKA,KAAKO,eAkBrBK,EAAIZ,KAAKA,KAAKO,gBACRN,IAAI,uBAAwBW,EAAIZ,mBAC7BY,EAAIZ,KAAKA,KAAKO,SACfK,EAAIZ,KAAKA,KAAKM,OAAQM,EAAIZ,KAAKA,KAAKO"}