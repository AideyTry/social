{"version":3,"file":"index.js","sources":["../../../../../src/pages/find/index.vue","../../../../../uniPage:/cGFnZXMvZmluZC9pbmRleC52dWU"],"sourcesContent":["<!--\r\n * @Author: Aiden(戴林波)\r\n * @Date: 2021-12-17 17:50:13\r\n * @LastEditTime: 2022-06-27 23:22:33\r\n * @LastEditors: Aiden(戴林波)\r\n * @Description: \r\n * @Email: jason_dlb@sina.cn\r\n-->\r\n<template>\r\n  <view class=\"share-wraper\">\r\n    <!-- <uni-file-picker\r\n      file-mediatype=\"all\"\r\n      @select=\"onSelect\"\r\n      @progress=\"onProgress\"\r\n      @success=\"success\"\r\n      @fail=\"fail\"\r\n    >\r\n      <button>选择文件</button>\r\n    </uni-file-picker> -->\r\n    <!-- <view class=\"progress-large-file\"> -->\r\n    <!-- </view> -->\r\n    <!-- <progress :percent=\"80\" active :fontSize=\"24\" activeColor=\"#00f\" show-info stroke-width=\"3\"/> -->\r\n    <!-- <view>\r\n      <button @tap=\"uploadVideo\">上传视频</button>\r\n      <video :src=\"src\"></video>\r\n    </view> -->\r\n\r\n    <!-- <view>\r\n      <uni-file-picker\r\n        file-mediatype=\"image\"\r\n        @select=\"onSelectImage\"\r\n        @progress=\"progressImages\"\r\n        @success=\"successImage\"\r\n        @fail=\"failImage\"\r\n      >\r\n        <button>选择图片</button>\r\n      </uni-file-picker>\r\n      <progress\r\n        :percent=\"progressImage\"\r\n        active\r\n        :fontSize=\"24\"\r\n        activeColor=\"#00f\"\r\n        show-info\r\n        stroke-width=\"3\"\r\n      />\r\n    </view> -->\r\n    <uni-forms ref=\"form\" :modelValue=\"formData\" :rules=\"rules\">\r\n      <view class=\"info-item\">\r\n        <uni-forms-item\r\n          required\r\n          label=\"标    题：\"\r\n          name=\"title\"\r\n          label-width=\"80\"\r\n        >\r\n          <uni-easyinput\r\n            v-model=\"title\"\r\n            placeholder=\"请输入标题\"\r\n          ></uni-easyinput>\r\n        </uni-forms-item>\r\n      </view>\r\n      <view class=\"info-item\">\r\n        <!-- <view class=\"title-wraper\">\r\n          <text class=\"title\">个人签名</text>\r\n        </view> -->\r\n        <uni-forms-item\r\n          required\r\n          label=\"兴    趣：\"\r\n          name=\"hobby\"\r\n          label-width=\"80\"\r\n        >\r\n          <!-- <uni-data-checkbox\r\n            :value=\"hobby\"\r\n            :multiple=\"false\"\r\n            :localdata=\"hobbys\"\r\n            @change=\"hobbyChange\"\r\n          ></uni-data-checkbox> -->\r\n          <radio-group class=\"uni-list\" @change=\"hobbyChange\">\r\n            <label\r\n              class=\"uni-list-cell uni-list-cell-pd\"\r\n              v-for=\"(item, index) in hobbys\"\r\n              :key=\"index\"\r\n            >\r\n              <view>\r\n                <radio :id=\"item.value\" :value=\"item.value\"></radio>\r\n              </view>\r\n              <view>\r\n                <label class=\"label-2-text\" :for=\"item.value\">\r\n                  <text>{{ item.text }}</text>\r\n                </label>\r\n              </view>\r\n            </label>\r\n          </radio-group>\r\n        </uni-forms-item>\r\n      </view>\r\n      <view class=\"info-item\">\r\n        <uni-forms-item\r\n          required\r\n          label=\"文件类型：\"\r\n          name=\"fileType\"\r\n          label-width=\"80\"\r\n        >\r\n          <!-- <uni-data-checkbox\r\n            :multiple=\"false\"\r\n            :value=\"fileType\"\r\n            :localdata=\"fileTypes\"\r\n            @change=\"typeChange\"\r\n          ></uni-data-checkbox> -->\r\n          <radio-group class=\"uni-list\" @change=\"typeChange\">\r\n            <label\r\n              class=\"uni-list-cell uni-list-cell-pd\"\r\n              v-for=\"item in fileTypes\"\r\n              :key=\"item.value\"\r\n            >\r\n              <view>\r\n                <radio :id=\"item.value\" :value=\"item.value\"></radio>\r\n              </view>\r\n              <view>\r\n                <label class=\"label-2-text\" :for=\"item.value\">\r\n                  <text>{{ item.text }}</text>\r\n                </label>\r\n              </view>\r\n            </label>\r\n          </radio-group>\r\n        </uni-forms-item>\r\n      </view>\r\n      <view class=\"info-item\">\r\n        <uni-forms-item\r\n          required\r\n          label=\"内    容：\"\r\n          name=\"content\"\r\n          label-width=\"80\"\r\n        >\r\n          <!-- <uni-easyinput\r\n            type=\"textarea\"\r\n            :maxlength=\"-1\"\r\n            autoHeight\r\n            v-model=\"content\"\r\n            placeholder=\"请输入正文内容\"\r\n          ></uni-easyinput> -->\r\n          <uni-easyinput type=\"textarea\" autoHeight v-model=\"content\" placeholder=\"请输入正文内容\"></uni-easyinput>\r\n        </uni-forms-item>\r\n      </view>\r\n    </uni-forms>\r\n    <button @tap=\"submit\" type=\"primary\">上传分享</button>\r\n    <progress\r\n      v-if=\"uploadLoading\"\r\n      :percent=\"progressPercent\"\r\n      :fontSize=\"24\"\r\n      activeColor=\"#00f\"\r\n      show-info\r\n      stroke-width=\"12\"\r\n    />\r\n    <view class=\"upload-text\">\r\n      <text v-if=\"uploadFlag\" @click=\"onPause\">{{ uploadText }}</text>\r\n    </view>\r\n  </view>\r\n</template>\r\n\r\n<script>\r\nimport { getTotalIM } from \"@/utils/storage.js\";\r\nexport default {\r\n  onShow: function() {\r\n    if (getTotalIM() > 0) {\r\n      uni.setTabBarBadge({\r\n        index: 2,\r\n        text: \"···\",\r\n      });\r\n    } else {\r\n      uni.removeTabBarBadge({\r\n        index: 2,\r\n      });\r\n    }\r\n  },\r\n};\r\n</script>\r\n\r\n<script setup>\r\nimport { reactive, ref, computed, watch } from \"vue\";\r\nimport { useStore } from \"vuex\";\r\nimport qs from \"qs\";\r\nimport SparkMD5 from \"spark-md5\";\r\nimport { fileParse } from \"../../utils/util\";\r\nimport { uploadImage, mergeFile } from \"../../api/file\";\r\nimport { request } from \"../../utils/request\";\r\n\r\nconst store = useStore();\r\nconst userInfo = computed(() => store.state.user.userInfo).value;\r\n\r\nlet src = ref(\"\");\r\nlet progressPercent = ref(0);\r\nlet partListLength = ref(0);\r\nlet cutParts = ref([]);\r\nlet uploadText = ref(\"暂停\");\r\nlet uploadFlag = ref(false);\r\nlet uploadBtn = ref(false);\r\nlet abort = ref(false);\r\nlet uploadLoading = ref(false);\r\n\r\nconst success = (e) => {\r\n  console.log(\"e===\", e);\r\n};\r\nconst onSelect1 = (e) => {\r\n  console.log(\"select \", e);\r\n  const { tempFilePaths } = e;\r\n  src.value = tempFilePaths[0];\r\n  console.log(\"tempFilePath===\", tempFilePaths[0]);\r\n  const uploadTask = uni.uploadFile({\r\n    // url: \"/upload/files/uploadVideo\",\r\n    url: \"/prod/files/uploadVideo\",\r\n    filePath: tempFilePaths[0],\r\n    name: \"file\",\r\n    fileType: \"video\",\r\n    // formData: {\r\n    //   user: \"test\",\r\n    // },\r\n    success: (uploadFileRes) => {\r\n      console.log(\"uploadFileRes===\", uploadFileRes);\r\n    },\r\n  });\r\n\r\n  uploadTask.onProgressUpdate((res) => {\r\n    console.log(\"res===\", res);\r\n    console.log(\"上传进度\" + res.progress);\r\n    progressPercent.value = res.progress;\r\n    console.log(\"已经上传的数据长度\" + res.totalBytesSent);\r\n    console.log(\"预期需要上传的数据总长度\" + res.totalBytesExpectedToSend);\r\n\r\n    // 测试条件，取消上传任务。\r\n    // if (res.progress > 50) {\r\n    //   uploadTask.abort();\r\n    // }\r\n  });\r\n};\r\n\r\n// 大文件上传\r\nlet hash = ref(\"\");\r\nlet partList = ref([]);\r\nlet requestList = ref([]);\r\nlet total = ref(0);\r\nlet sendIndex = ref(0);\r\n\r\n/**\r\n * @description: 传递完文件后合并切片文件\r\n * @param {*}\r\n * @Author:\r\n * @return {*}\r\n */\r\nconst complete = () => {\r\n  console.log(\"去调用接口合并文件\");\r\n  const { avatar, username } = userInfo;\r\n  const params = {\r\n    hash: hash.value,\r\n    title: formData.title,\r\n    hobby: formData.hobby,\r\n    fileType: formData.fileType,\r\n    content: formData.content,\r\n    avatar,\r\n    username,\r\n  };\r\n  mergeFile(params).then((data) => {\r\n    console.log(\"data===\", data);\r\n    uploadFlag.value = false;\r\n    uploadLoading.value = false;\r\n    // progressPercent.value  = 100\r\n  });\r\n};\r\n\r\nconst promiseSend = (item, index) => {\r\n  return new Promise((resolve, reject) => {\r\n    const blobUrl = URL.createObjectURL(item.chunk);\r\n    console.log(\"blobUrl===\", blobUrl);\r\n    const uploadTask = uni.uploadFile({\r\n      url: \"/prod/files/uploadLargeFile\",\r\n      // url: \"/upload/files/uploadLargeFile\",\r\n      // url: \"http://localhost:3000/files/uploadLargeFile\",\r\n      filePath: blobUrl,\r\n      name: \"file\",\r\n      fileType: \"video\",\r\n      formData: {\r\n        filename: item.filename,\r\n      },\r\n      success: (uploadFileRes) => {\r\n        console.log(\"uploadFileRes===\", uploadFileRes);\r\n        const { statusCode } = uploadFileRes;\r\n        // 上传完就从切片数组中删除当前部分\r\n        console.log(\"index================================\", index);\r\n        if (statusCode === 200) {\r\n          // partListLength.value / partList.value.length\r\n          let parts = partList.value;\r\n          const part = parts.splice(0, 1);\r\n          cutParts.value.push(part);\r\n          partList.value = [...parts];\r\n          console.log(\"partList=\", partList);\r\n          console.log(\"cutPartslength=\", cutParts.value.length);\r\n          console.log(\"partListLength=\", partListLength.value);\r\n          progressPercent.value = (\r\n            (cutParts.value.length / partListLength.value) *\r\n            100\r\n          ).toFixed(2);\r\n          resolve(true);\r\n        } else {\r\n          resolve(false);\r\n        }\r\n      },\r\n      fail: (err) => {\r\n        console.log(\"err=\", err);\r\n      },\r\n    });\r\n  });\r\n};\r\n\r\n/**\r\n * @description: 串行发送请求\r\n * @param {*}\r\n * @Author:\r\n * @return {*}\r\n */\r\n\r\n/**\r\n * @description:   传递,使用串行（传完一个再传递下一个）\r\n * @param {*}\r\n * @Author:\r\n * @return {*}\r\n */\r\nconst sendRequest = async () => {\r\n  //   let activeIndex = 0\r\n  //   console.log('partList.value.length=', partList.value.length)\r\n  uploadFlag.value = true;\r\n  // uploadText.value = '暂停'\r\n  requestList.value = [];\r\n  //   let i = 0\r\n  //   const send = async () => {\r\n  //           if (i >= partList.value.length) {\r\n  //             // 发送完毕\r\n  //             complete()\r\n  //             return\r\n  //           }\r\n  //           // await requestList[i]()\r\n  //           const items = partList.value\r\n  //           const activeIndex = await promiseSend(items[i], i);\r\n  //           // partList.value.splice(activeIndex, 1)\r\n  //           i++\r\n  //           console.log('activeIndex=', activeIndex)\r\n  //           console.log('i=', i)\r\n  //           send()\r\n  // };\r\n  //   send()\r\n\r\n  console.log(\"partList.value=\", partList.value);\r\n  partList.value.forEach((item, index) => {\r\n    const fn = () => promiseSend(item, index);\r\n    requestList.value.push(fn);\r\n  });\r\n\r\n  let i = 0;\r\n  const send = async () => {\r\n    if (abort.value) {\r\n      return;\r\n    }\r\n    console.log(\"abort\", abort.value);\r\n    console.log(\"requestList.value===\", requestList.value);\r\n    if (i >= requestList.value.length) {\r\n      complete();\r\n      return;\r\n    }\r\n    try {\r\n      const isStep = await requestList.value[i]();\r\n      console.log(\"isStep=\", isStep);\r\n      if (isStep) {\r\n        i++;\r\n      }\r\n      send();\r\n    } catch (error) {\r\n      throw new Error(\"err happened\");\r\n    }\r\n  };\r\n  send();\r\n\r\n  // for (let item of partList.value) {\r\n  //   // 如果中断则不再传递\r\n  // if(abort.value){\r\n  //   return\r\n  // }\r\n  //   await promiseSend(item, activeIndex);\r\n  //   activeIndex++\r\n  //   progressPercent.value = activeIndex\r\n  //   console.log('progressPercent.value===', progressPercent.value)\r\n  //   if(activeIndex >= partList.value.length){\r\n  //     complete()\r\n  //   }\r\n  // }\r\n};\r\n\r\nconst sends = async (tempFile) => {\r\n  console.log(\"tempFiles===\", tempFile);\r\n  uploadLoading.value = true;\r\n  const buffer = await fileParse(tempFile, \"buffer\");\r\n  const spark = new SparkMD5.ArrayBuffer();\r\n  let suffix;\r\n  spark.append(buffer);\r\n  hash.value = spark.end();\r\n  suffix = /\\.([0-9a-zA-Z]+)$/i.exec(tempFile.name)[1];\r\n  // 创建切片\r\n  // let partsize = tempFile.size / 100;\r\n  // let cut = 0;\r\n  // for (let i = 0; i < 100; i++) {\r\n  //   let item = {\r\n  //     chunk: tempFile.slice(cut, cut + partsize),\r\n  //     filename: `${hash.value}_${i}_.${suffix}`,\r\n  //   };\r\n  //   cut += partsize;\r\n  //   partList.value.push(item);\r\n  // }\r\n  const partSize = 524288;\r\n  let cut = 0;\r\n  partListLength.value = Math.ceil(tempFile.size / partSize);\r\n  console.log(\"partListLength=\", partListLength.value);\r\n  for (let i = 0; i < partListLength.value; i++) {\r\n    let item = {\r\n      chunk: tempFile.slice(cut, cut + partSize),\r\n      filename: `${hash.value}_${i}_.${suffix}`,\r\n    };\r\n    cut += partSize;\r\n    partList.value.push(item);\r\n  }\r\n  sendRequest();\r\n};\r\n\r\nconst uploadVideo = () => {\r\n  uni.chooseVideo({\r\n    sourceType: [\"camera\", \"album\"],\r\n    success: function(res) {\r\n      console.log(\"res===\", res);\r\n      src.value = res.tempFilePath;\r\n      uploadBtn.value = true;\r\n      sends(res.tempFile);\r\n      // uni.uploadFile({\r\n      //   url: \"/dev/files/uploadVideo\",\r\n      //   filePath: res.tempFilePath,\r\n      //   name: \"file\",\r\n      //   fileType: \"video\",\r\n      //   formData: {\r\n      //     user: \"test\",\r\n      //   },\r\n      //   success: (uploadFileRes) => {\r\n      //     console.log(\"uploadFileRes===\", uploadFileRes);\r\n      //   },\r\n      // });\r\n    },\r\n  });\r\n};\r\n\r\nconst onSelect = async (e) => {\r\n  console.log(\"select \", e);\r\n  const { tempFilePaths, tempFiles } = e;\r\n  const file = tempFiles[0].file;\r\n  src.value = tempFilePaths[0];\r\n  console.log(\"tempFilePath===\", tempFilePaths[0]);\r\n  console.log(\"tempFiles===\", tempFiles[0]);\r\n  console.log(\"file===\", file);\r\n  const buffer = await fileParse(file, \"buffer\");\r\n  const spark = new SparkMD5.ArrayBuffer();\r\n  let suffix;\r\n  spark.append(buffer);\r\n  hash.value = spark.end();\r\n  suffix = /\\.([0-9a-zA-Z]+)$/i.exec(file.name)[1];\r\n  // 创建切片\r\n  let partsize = file.size / 100;\r\n  let cut = 0;\r\n  for (let i = 0; i < 100; i++) {\r\n    let item = {\r\n      chunk: file.slice(cut, cut + partsize),\r\n      filename: `${hash.value}_${i}_.${suffix}`,\r\n    };\r\n    cut += partsize;\r\n    partList.value.push(item);\r\n  }\r\n  sendRequest();\r\n};\r\n\r\nconst onPause = () => {\r\n  if (uploadBtn.value) {\r\n    uploadText.value = \"继续\";\r\n    uploadBtn.value = false;\r\n    abort.value = true;\r\n    // 暂停上传\r\n  } else {\r\n    uploadText.value = \"暂停\";\r\n    uploadBtn.value = true;\r\n    abort.value = false;\r\n    // 继续上传\r\n    sendRequest();\r\n  }\r\n};\r\n\r\nconst onProgress = (e) => {\r\n  console.log(\"e process=\", e);\r\n};\r\n// const progress = (e) => {\r\n//   console.log(\"progress=\", e);\r\n// };\r\nconst fail = (err) => {\r\n  console.log(\"err=\", err);\r\n};\r\n\r\n// 图片\r\nlet srcImage = ref(\"\");\r\nlet progressImage = ref(0);\r\nconst onSelectImage = async (e) => {\r\n  console.log(\"image=\", e);\r\n  if (!e) return;\r\n  const { tempFilePaths, tempFiles } = e;\r\n  uploadLoading.value = true;\r\n  const files = Object.assign([], tempFiles);\r\n  const fileAll = [];\r\n  for (let item of files) {\r\n    const chunk = await fileParse(item, \"base64\");\r\n    fileAll.push({\r\n      filename: item.name,\r\n      chunk: chunk,\r\n    });\r\n  }\r\n  const buffer = await fileParse(tempFiles[0], \"buffer\");\r\n  const spark = new SparkMD5.ArrayBuffer();\r\n  spark.append(buffer);\r\n  const hash = spark.end();\r\n  const { avatar, username } = userInfo;\r\n  uploadImage(\r\n    qs.stringify({\r\n      fileAll,\r\n      hash,\r\n      title: formData.title,\r\n      hobby: parseInt(formData.hobby),\r\n      fileType: formData.fileType,\r\n      content: formData.content,\r\n      avatar,\r\n      username,\r\n    })\r\n  ).then((data) => {\r\n    console.log(\"data===\", data);\r\n    const {\r\n      data: { code },\r\n    } = data;\r\n    if (code === 200) {\r\n      progressPercent.value = 100;\r\n      uploadLoading.value = false;\r\n    }\r\n  });\r\n};\r\nconst onUploadImage = async () => {\r\n  uni.chooseImage({\r\n    count: 6, //默认9\r\n    sizeType: [\"original\", \"compressed\"], //可以指定是原图还是压缩图，默认二者都有\r\n    sourceType: [\"album\"], //从相册选择\r\n    success: function(res) {\r\n      onSelectImage(res);\r\n    },\r\n  });\r\n};\r\nconst progressImages = (e) => {\r\n  console.log(\"image process=\", e);\r\n};\r\nconst successImage = () => {};\r\nconst failImage = () => {};\r\n\r\n// 表单数据\r\nconst form = ref(null);\r\nlet formData = reactive({\r\n  title: \"\",\r\n  hobby: \"\",\r\n  fileType: \"\",\r\n  content: \"\",\r\n});\r\nlet rules = {\r\n  title: {\r\n    rules: [\r\n      {\r\n        required: true,\r\n        errorMessage: \"请输入标题\",\r\n      },\r\n    ],\r\n  },\r\n  hobby: {\r\n    rules: [\r\n      {\r\n        required: true,\r\n        errorMessage: \"请选择兴趣\",\r\n      },\r\n    ],\r\n  },\r\n  fileType: {\r\n    rules: [\r\n      {\r\n        required: true,\r\n        errorMessage: \"请选择文件类型\",\r\n      },\r\n    ],\r\n  },\r\n  content: {\r\n    rules: [\r\n      {\r\n        required: true,\r\n        errorMessage: \"请输入正文内容\",\r\n      },\r\n    ],\r\n  },\r\n};\r\nlet title = ref(\"\");\r\nlet content = ref(\"\");\r\nlet hobby = ref(\"\");\r\nlet fileType = ref(\"\");\r\nlet hobbys = reactive([\r\n  { value: 0, text: \"狼人杀\", disable: false },\r\n  { value: 1, text: \"剧本杀\", disable: false },\r\n  { value: 2, text: \"登山\", disable: false },\r\n  { value: 3, text: \"旅游\", disable: false },\r\n  { value: 4, text: \"视频\", disable: false },\r\n]);\r\nlet fileTypes = ref([\r\n  { value: 0, text: \"图片\", disable: false },\r\n  { value: 1, text: \"视频\", disable: false },\r\n]);\r\nconst hobbyChange = (e) => {\r\n  console.log(\"e=\", e);\r\n  const {\r\n    detail: { value },\r\n  } = e;\r\n  hobby.value = value;\r\n  form.value.setValue(\"hobby\", value);\r\n};\r\nconst typeChange = (e) => {\r\n  const {\r\n    detail: { value },\r\n  } = e;\r\n  fileType.value = value;\r\n  form.value.setValue(\"fileType\", value);\r\n};\r\nconst submit = () => {\r\n  form.value\r\n    .validate()\r\n    .then((res) => {\r\n      console.log(\"表单数据信息：\", res);\r\n      const { fileType, title, content, hobby } = res;\r\n      formData.content = content;\r\n      formData.title = title;\r\n      formData.fileType = fileType;\r\n      formData.hobby = hobby;\r\n      if (fileType === 0) {\r\n        onUploadImage();\r\n      } else {\r\n        uploadVideo();\r\n      }\r\n    })\r\n    .catch((err) => {\r\n      console.log(\"表单错误信息：\", err);\r\n    });\r\n};\r\n\r\n// 监听\r\nwatch(\r\n  () => {\r\n    return hobby.value;\r\n  },\r\n  (state) => {\r\n    console.log(\"state=\", state);\r\n    switch (state) {\r\n      case 0:\r\n      case 1:\r\n        fileTypes.value = [{ value: 0, text: \"图片\", disable: false }];\r\n        break;\r\n      case 2:\r\n      case 3:\r\n        fileTypes.value = [\r\n          { value: 0, text: \"图片\", disable: false },\r\n          { value: 1, text: \"视频\", disable: false },\r\n        ];\r\n        break;\r\n      case 4:\r\n        fileTypes.value = [{ value: 1, text: \"视频\", disable: false }];\r\n        break;\r\n    }\r\n  },\r\n  {\r\n    deep: true,\r\n  }\r\n);\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\n.share-wraper {\r\n  padding: 100rpx 30rpx 0;\r\n  .progress-large-file {\r\n    display: flex;\r\n  }\r\n  .upload-text {\r\n    text-align: center;\r\n  }\r\n  .title-wraper {\r\n    padding: 20rpx 0;\r\n    .title {\r\n      font-weight: 700;\r\n    }\r\n  }\r\n  .uni-list {\r\n    display: flex;\r\n    .uni-list-cell {\r\n      margin-right: 46rpx;\r\n    }\r\n  }\r\n}\r\n</style>\r\n","import MiniProgramPage from 'C:/myself/social/social/src/pages/find/index.vue'\nwx.createPage(MiniProgramPage)"],"names":["onShow","getTotalIM","setTabBarBadge","index","text","removeTabBarBadge","store","useStore","userInfo","computed","state","user","value","src","ref","progressPercent","partListLength","cutParts","uploadText","uploadFlag","uploadBtn","abort","uploadLoading","hash","partList","requestList","sendRequest","async","log","forEach","item","push","Promise","resolve","reject","blobUrl","URL","createObjectURL","chunk","uploadFile","url","filePath","name","fileType","formData","filename","success","uploadFileRes","statusCode","parts","part","splice","length","toFixed","fail","err","promiseSend","i","send","avatar","username","params","title","hobby","content","then","data","isStep","error","Error","uploadVideo","chooseVideo","sourceType","res","tempFilePath","tempFile","buffer","fileParse","spark","SparkMD5","ArrayBuffer","suffix","append","end","exec","partSize","cut","Math","ceil","size","slice","onPause","onUploadImage","chooseImage","count","sizeType","e","tempFilePaths","tempFiles","files","Object","assign","fileAll","hash2","qs","stringify","parseInt","code","form","reactive","rules","required","errorMessage","hobbys","disable","fileTypes","hobbyChange","detail","setValue","typeChange","submit","validate","content2","title2","fileType2","hobby2","catch","deep","wx","createPage","MiniProgramPage"],"mappings":"okBAgKA,QAAe,CACbA,OAAQ,WACFC,eAAe,UACbC,eAAe,CACjBC,MAAO,EACPC,KAAM,gBAGJC,kBAAkB,CACpBF,MAAO,wCAgBTG,EAAQC,aACRC,EAAWC,cAAS,IAAMH,EAAMI,MAAMC,KAAKH,WAAUI,UAEvDC,EAAMC,MAAI,IACVC,EAAkBD,MAAI,GACtBE,EAAiBF,MAAI,GACrBG,EAAWH,MAAI,IACfI,EAAaJ,MAAI,MACjBK,EAAaL,OAAI,GACjBM,EAAYN,OAAI,GAChBO,EAAQP,OAAI,GACZQ,EAAgBR,OAAI,GAuCpBS,EAAOT,MAAI,IACXU,EAAWV,MAAI,IACfW,EAAcX,MAAI,UACN,SACI,SAqFdY,EAAcC,YAGPf,OAAQ,IAEPA,MAAQ,WAmBZgB,IAAI,kBAAmBJ,EAASZ,SAC/BA,MAAMiB,SAAQ,CAACC,EAAM3B,OAEhBS,MAAMmB,MADP,IAnFK,EAACD,EAAM3B,IAClB,IAAI6B,SAAQ,CAACC,EAASC,WACrBC,EAAUC,IAAIC,gBAAgBP,EAAKQ,eACjCV,IAAI,aAAcO,WACHI,WAAW,CAChCC,IAAK,8BAGLC,SAAUN,EACVO,KAAM,OACNC,SAAU,QACVC,SAAU,CACRC,SAAUf,EAAKe,UAEjBC,QAAUC,YACAnB,IAAI,mBAAoBmB,SAC1BC,WAAEA,GAAeD,aAEfnB,IAAI,wCAAyCzB,GAClC,MAAf6C,EAAoB,KAElBC,EAAQzB,EAASZ,YACfsC,EAAOD,EAAME,OAAO,EAAG,KACpBvC,MAAMmB,KAAKmB,KACXtC,MAAQ,IAAIqC,WACbrB,IAAI,YAAaJ,WACjBI,IAAI,kBAAmBX,EAASL,MAAMwC,gBACtCxB,IAAI,kBAAmBZ,EAAeJ,SAC9BA,SACJA,MAAMwC,OAASpC,EAAeJ,MACxC,KACAyC,QAAQ,MACF,WAEA,IAGZC,KAAOC,YACG3B,IAAI,OAAQ2B,SA6CPC,CAAY1B,EAAM3B,YAIjCsD,EAAI,QACFC,EAAO/B,cACPN,EAAMT,iBAGFgB,IAAI,QAASP,EAAMT,eACnBgB,IAAI,uBAAwBH,EAAYb,OAC5C6C,GAAKhC,EAAYb,MAAMwC,OAlHd,cACPxB,IAAI,mBACN+B,OAAEA,WAAQC,GAAapD,EACvBqD,EAAS,CACbtC,KAAMA,EAAKX,MACXkD,MAAOlB,EAASkB,MAChBC,MAAOnB,EAASmB,MAChBpB,SAAUC,EAASD,SACnBqB,QAASpB,EAASoB,QAClBL,OAAAA,EACAC,SAAAA,eAEQC,GAAQI,MAAMC,YACdtC,IAAI,UAAWsC,KACZtD,OAAQ,IACLA,OAAQ,wBAwGduD,QAAe1C,EAAYb,MAAM6C,aAC/B7B,IAAI,UAAWuC,GACnBA,iBAIGC,SACD,IAAIC,MAAM,uBAuDhBC,EAAc,aACdC,YAAY,CACdC,WAAY,CAAC,SAAU,SACvB1B,QAAS,SAAS2B,WACR7C,IAAI,SAAU6C,KAClB7D,MAAQ6D,EAAIC,eACN9D,OAAQ,EAzCVe,OAAOgD,YACX/C,IAAI,eAAgB+C,KACd/D,OAAQ,QAChBgE,QAAeC,YAAUF,EAAU,UACnCG,EAAQ,IAAIC,WAASC,gBACvBC,IACEC,OAAON,KACRhE,MAAQkE,EAAMK,QACV,qBAAqBC,KAAKT,EAASjC,MAAM,SAY5C2C,EAAW,WACbC,EAAM,IACK1E,MAAQ2E,KAAKC,KAAKb,EAASc,KAAOJ,WACzCzD,IAAI,kBAAmBZ,EAAeJ,eACrC6C,EAAI,EAAGA,EAAIzC,EAAeJ,MAAO6C,IAAK,KACzC3B,EAAO,CACTQ,MAAOqC,EAASe,MAAMJ,EAAKA,EAAMD,GACjCxC,SAAU,GAAGtB,EAAKX,SAAS6C,MAAMwB,QAE5BI,IACEzE,MAAMmB,KAAKD,SAYZ2C,EAAIE,cA6CVgB,EAAU,KACVvE,EAAUR,SACDA,MAAQ,OACTA,OAAQ,IACZA,OAAQ,MAGHA,MAAQ,OACTA,OAAQ,IACZA,OAAQ,cAiBC,UACK,SA0ClBgF,EAAgBjE,kBAChBkE,YAAY,CACdC,MAAO,EACPC,SAAU,CAAC,WAAY,cACvBvB,WAAY,CAAC,SACb1B,QAAS,SAAS2B,GA9CA9C,OAAOqE,eACnBpE,IAAI,SAAUoE,IACjBA,eACCC,cAAEA,YAAeC,GAAcF,IACvBpF,OAAQ,QAChBuF,EAAQC,OAAOC,OAAO,GAAIH,GAC1BI,EAAU,WACPxE,KAAQqE,EAAO,OAChB7D,QAAcuC,YAAU/C,EAAM,YAC5BC,KAAK,CACXc,SAAUf,EAAKY,KACfJ,MAAAA,UAGEsC,QAAeC,YAAUqB,EAAU,GAAI,UACvCpB,EAAQ,IAAIC,WAASC,cACrBE,OAAON,SACP2B,EAAOzB,EAAMK,OACbxB,OAAEA,WAAQC,GAAapD,gBAE3BgG,MAAGC,UAAU,CACXH,QAAAA,EACA/E,OACAuC,MAAOlB,EAASkB,MAChBC,MAAO2C,SAAS9D,EAASmB,OACzBpB,SAAUC,EAASD,SACnBqB,QAASpB,EAASoB,QAClBL,OAAAA,EACAC,SAAAA,KAEFK,MAAMC,YACEtC,IAAI,UAAWsC,SAErBA,MAAMyC,KAAEA,IACNzC,EACS,MAATyC,MACc/F,MAAQ,MACVA,OAAQ,QAUR6D,OAWdmC,EAAO9F,MAAI,UACb8B,EAAWiE,WAAS,CACtB/C,MAAO,GACPC,MAAO,GACPpB,SAAU,GACVqB,QAAS,KAEP8C,EAAQ,CACVhD,MAAO,CACLgD,MAAO,CACL,CACEC,UAAU,EACVC,aAAc,WAIpBjD,MAAO,CACL+C,MAAO,CACL,CACEC,UAAU,EACVC,aAAc,WAIpBrE,SAAU,CACRmE,MAAO,CACL,CACEC,UAAU,EACVC,aAAc,aAIpBhD,QAAS,CACP8C,MAAO,CACL,CACEC,UAAU,EACVC,aAAc,cAKlBlD,EAAQhD,MAAI,IACZkD,EAAUlD,MAAI,IACdiD,EAAQjD,MAAI,IACZ6B,EAAW7B,MAAI,IACfmG,EAASJ,WAAS,CACpB,CAAEjG,MAAO,EAAGR,KAAM,MAAO8G,SAAS,GAClC,CAAEtG,MAAO,EAAGR,KAAM,MAAO8G,SAAS,GAClC,CAAEtG,MAAO,EAAGR,KAAM,KAAM8G,SAAS,GACjC,CAAEtG,MAAO,EAAGR,KAAM,KAAM8G,SAAS,GACjC,CAAEtG,MAAO,EAAGR,KAAM,KAAM8G,SAAS,KAE/BC,EAAYrG,MAAI,CAClB,CAAEF,MAAO,EAAGR,KAAM,KAAM8G,SAAS,GACjC,CAAEtG,MAAO,EAAGR,KAAM,KAAM8G,SAAS,WAE7BE,EAAepB,YACXpE,IAAI,KAAMoE,SAEhBqB,QAAQzG,MAAEA,IACRoF,IACEpF,MAAQA,IACTA,MAAM0G,SAAS,QAAS1G,IAEzB2G,EAAcvB,UAEhBqB,QAAQzG,MAAEA,IACRoF,IACKpF,MAAQA,IACZA,MAAM0G,SAAS,WAAY1G,IAE5B4G,EAAS,OACR5G,MACF6G,WACAxD,MAAMQ,YACG7C,IAAI,UAAW6C,SACf9B,WAAUmB,QAAOE,UAASD,SAAUU,IACnCT,QAAU0D,IACV5D,MAAQ6D,IACRhF,SAAWiF,IACX7D,MAAQ8D,EACA,IAAbD,aAMLE,OAAOvE,YACE3B,IAAI,UAAW2B,uBAM3B,IACSQ,EAAMnD,QAEdF,mBACSkB,IAAI,SAAUlB,GACdA,QACD,OACA,IACOE,MAAQ,CAAC,CAAEA,MAAO,EAAGR,KAAM,KAAM8G,SAAS,eAEjD,OACA,IACOtG,MAAQ,CAChB,CAAEA,MAAO,EAAGR,KAAM,KAAM8G,SAAS,GACjC,CAAEtG,MAAO,EAAGR,KAAM,KAAM8G,SAAS,eAGhC,IACOtG,MAAQ,CAAC,CAAEA,MAAO,EAAGR,KAAM,KAAM8G,SAAS,OAI1D,CACEa,MAAM,07BC1qBVC,GAAGC,WAAWC"}