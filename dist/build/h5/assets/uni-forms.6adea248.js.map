{"version":3,"file":"uni-forms.6adea248.js","sources":["../../../../src/uni_modules/uni-forms/components/uni-forms-item/uni-forms-item.vue","../../../../src/uni_modules/uni-forms/components/uni-forms/validate.js","../../../../src/uni_modules/uni-forms/components/uni-forms/uni-forms.vue"],"sourcesContent":["<template>\r\n\t<view class=\"uni-forms-item\" :class=\"{ 'uni-forms-item--border': border, 'is-first-border': border && isFirstBorder, 'uni-forms-item-error': msg }\">\r\n\t\t<view class=\"uni-forms-item__box\">\r\n\t\t\t<view class=\"uni-forms-item__inner\" :class=\"['is-direction-' + labelPos]\">\r\n\t\t\t\t<view class=\"uni-forms-item__label\" :style=\"{ width: labelWid , justifyContent: justifyContent }\">\r\n\t\t\t\t\t<slot name=\"label\">\r\n\t\t\t\t\t\t<text v-if=\"required\" class=\"is-required\">*</text>\r\n\t\t\t\t\t\t<uni-icons v-if=\"leftIcon\" class=\"label-icon\" size=\"16\" :type=\"leftIcon\" :color=\"iconColor\" />\r\n\t\t\t\t\t\t<text class=\"label-text\">{{ label }}</text>\r\n\r\n\t\t\t\t\t\t<view v-if=\"label\" class=\"label-seat\"></view>\r\n\t\t\t\t\t</slot>\r\n\t\t\t\t</view>\r\n\t\t\t\t<view class=\"uni-forms-item__content\" :class=\"{ 'is-input-error-border': msg }\"><slot></slot></view>\r\n\t\t\t</view>\r\n\t\t\t<view\r\n\t\t\t\tv-if=\"msg\"\r\n\t\t\t\tclass=\"uni-error-message\"\r\n\t\t\t\t:class=\"{ 'uni-error-msg--boeder': border }\"\r\n\t\t\t\t:style=\"{\r\n\t\t\t\t\tpaddingLeft: labelLeft\r\n\t\t\t\t}\"\r\n\t\t\t>\r\n\t\t\t\t<text class=\"uni-error-message-text\">{{ showMsg === 'undertext' ? msg : '' }}</text>\r\n\t\t\t</view>\r\n\t\t</view>\r\n\t</view>\r\n</template>\r\n\r\n<script>\r\n/**\r\n * Field 输入框\r\n * @description 此组件可以实现表单的输入与校验，包括 \"text\" 和 \"textarea\" 类型。\r\n * @tutorial https://ext.dcloud.net.cn/plugin?id=21001\r\n * @property {Boolean} \trequired \t\t\t是否必填，左边显示红色\"*\"号（默认false）\r\n * @property {String} validateTrigger = [bind|submit]\t校验触发器方式 默认 submit 可选\r\n * \t@value bind \t发生变化时触发\r\n * \t@value submit \t提交时触发\r\n * @property {String } \tleftIcon \t\t\tlabel左边的图标，限 uni-ui 的图标名称\r\n * @property {String } \ticonColor \t\t\t左边通过icon配置的图标的颜色（默认#606266）\r\n * @property {String } \tlabel \t\t\t\t输入框左边的文字提示\r\n * @property {Number } \tlabelWidth \t\t\tlabel的宽度，单位px（默认65）\r\n * @property {String } \tlabelAlign = [left|center|right] label的文字对齐方式（默认left）\r\n * \t@value left\t\tlabel 左侧显示\r\n * \t@value center\tlabel 居中\r\n * \t@value right\tlabel 右侧对齐\r\n * @property {String } \tlabelPosition = [top|left] label的文字的位置（默认left）\r\n * \t@value top\t顶部显示 label\r\n * \t@value left\t左侧显示 label\r\n * @property {String } \terrorMessage \t\t显示的错误提示内容，如果为空字符串或者false，则不显示错误信息\r\n * @property {String } \tname \t\t\t\t表单域的属性名，在使用校验规则时必填\r\n */\r\n\r\nexport default {\r\n\tname: 'uniFormsItem',\r\n\tprops: {\r\n\t\t// 自定义内容\r\n\t\tcustom: {\r\n\t\t\ttype: Boolean,\r\n\t\t\tdefault: false\r\n\t\t},\r\n\t\t// 是否显示报错信息\r\n\t\tshowMessage: {\r\n\t\t\ttype: Boolean,\r\n\t\t\tdefault: true\r\n\t\t},\r\n\t\tname: String,\r\n\t\trequired: Boolean,\r\n\t\tvalidateTrigger: {\r\n\t\t\ttype: String,\r\n\t\t\tdefault: ''\r\n\t\t},\r\n\t\tleftIcon: String,\r\n\t\ticonColor: {\r\n\t\t\ttype: String,\r\n\t\t\tdefault: '#606266'\r\n\t\t},\r\n\t\tlabel: String,\r\n\t\t// 左边标题的宽度单位px\r\n\t\tlabelWidth: {\r\n\t\t\ttype: [Number, String],\r\n\t\t\tdefault: ''\r\n\t\t},\r\n\t\t// 对齐方式，left|center|right\r\n\t\tlabelAlign: {\r\n\t\t\ttype: String,\r\n\t\t\tdefault: ''\r\n\t\t},\r\n\t\t// lable的位置，可选为 left-左边，top-上边\r\n\t\tlabelPosition: {\r\n\t\t\ttype: String,\r\n\t\t\tdefault: ''\r\n\t\t},\r\n\t\terrorMessage: {\r\n\t\t\ttype: [String, Boolean],\r\n\t\t\tdefault: ''\r\n\t\t},\r\n\t\t// 表单校验规则\r\n\t\trules: {\r\n\t\t\ttype: Array,\r\n\t\t\tdefault() {\r\n\t\t\t\treturn [];\r\n\t\t\t}\r\n\t\t}\r\n\t},\r\n\tdata() {\r\n\t\treturn {\r\n\t\t\terrorTop: false,\r\n\t\t\terrorBottom: false,\r\n\t\t\tlabelMarginBottom: '',\r\n\t\t\terrorWidth: '',\r\n\t\t\terrMsg: '',\r\n\t\t\tval: '',\r\n\t\t\tlabelPos: '',\r\n\t\t\tlabelWid: '',\r\n\t\t\tlabelAli: '',\r\n\t\t\tshowMsg: 'undertext',\r\n\t\t\tborder: false,\r\n\t\t\tisFirstBorder: false,\r\n\t\t\tisArray: false,\r\n\t\t\tarrayField: ''\r\n\t\t};\r\n\t},\r\n\tcomputed: {\r\n\t\tmsg() {\r\n\t\t\treturn this.errorMessage || this.errMsg;\r\n\t\t},\r\n\t\tfieldStyle() {\r\n\t\t\tlet style = {};\r\n\t\t\tif (this.labelPos == 'top') {\r\n\t\t\t\tstyle.padding = '0 0';\r\n\t\t\t\tthis.labelMarginBottom = '6px';\r\n\t\t\t}\r\n\t\t\tif (this.labelPos == 'left' && this.msg !== false && this.msg != '') {\r\n\t\t\t\tstyle.paddingBottom = '0px';\r\n\t\t\t\tthis.errorBottom = true;\r\n\t\t\t\tthis.errorTop = false;\r\n\t\t\t} else if (this.labelPos == 'top' && this.msg !== false && this.msg != '') {\r\n\t\t\t\tthis.errorBottom = false;\r\n\t\t\t\tthis.errorTop = true;\r\n\t\t\t} else {\r\n\t\t\t\t// style.paddingBottom = ''\r\n\t\t\t\tthis.errorTop = false;\r\n\t\t\t\tthis.errorBottom = false;\r\n\t\t\t}\r\n\t\t\treturn style;\r\n\t\t},\r\n\r\n\t\t// uni不支持在computed中写style.justifyContent = 'center'的形式，故用此方法\r\n\t\tjustifyContent() {\r\n\t\t\tif (this.labelAli === 'left') return 'flex-start';\r\n\t\t\tif (this.labelAli === 'center') return 'center';\r\n\t\t\tif (this.labelAli === 'right') return 'flex-end';\r\n\t\t},\r\n\t\tlabelLeft(){\r\n\t\t\treturn (this.labelPos === 'left' ? parseInt(this.labelWid) : 0) + 'px'\r\n\t\t}\r\n\t},\r\n\twatch: {\r\n\t\tvalidateTrigger(trigger) {\r\n\t\t\tthis.formTrigger = trigger;\r\n\t\t}\r\n\t},\r\n\tcreated() {\r\n\t\tthis.form = this.getForm();\r\n\t\tthis.group = this.getForm('uniGroup');\r\n\t\tthis.formRules = [];\r\n\t\tthis.formTrigger = this.validateTrigger;\r\n\t\t// 处理 name，是否数组\r\n\t\tif (this.name && this.name.indexOf('[') !== -1 && this.name.indexOf(']') !== -1) {\r\n\t\t\tthis.isArray = true;\r\n\t\t\tthis.arrayField = this.name\r\n\t\t\t// fix by mehaotian 修改不修改的情况，动态值不检验的问题\r\n\t\t\tthis.form.formData[this.name] = this.form._getValue(this.name, '')\r\n\t\t}\r\n\t},\r\n\tmounted() {\r\n\t\tif (this.form) {\r\n\t\t\tthis.form.childrens.push(this);\r\n\t\t}\r\n\t\tthis.init();\r\n\t},\r\n\t// #ifndef VUE3\r\n\tdestroyed() {\r\n\t\tif(this.__isUnmounted) return\r\n\t\tthis.unInit()\r\n\t},\r\n\t// #endif\r\n\t// #ifdef VUE3\r\n\tunmounted(){\r\n\t\tthis.__isUnmounted = true\r\n\t\tthis.unInit()\r\n\t},\r\n\t// #endif\r\n\tmethods: {\r\n\t\tinit() {\r\n\t\t\tif (this.form) {\r\n\t\t\t\tlet { formRules, validator, formData, value, labelPosition, labelWidth, labelAlign, errShowType } = this.form;\r\n\t\t\t\tthis.labelPos = this.labelPosition ? this.labelPosition : labelPosition;\r\n\r\n\t\t\t\tif(this.label){\r\n\t\t\t\t\tthis.labelWid = (this.labelWidth ? this.labelWidth : (labelWidth||70))\r\n\t\t\t\t}else{\r\n\t\t\t\t\tthis.labelWid =( this.labelWidth ? this.labelWidth : (labelWidth||'auto'))\r\n\t\t\t\t}\r\n\t\t\t\tif(this.labelWid && this.labelWid !=='auto') {\r\n\t\t\t\t\tthis.labelWid +='px'\r\n\t\t\t\t}\r\n\t\t\t\tthis.labelAli = this.labelAlign ? this.labelAlign : labelAlign;\r\n\r\n\t\t\t\t// 判断第一个 item\r\n\t\t\t\tif (!this.form.isFirstBorder) {\r\n\t\t\t\t\tthis.form.isFirstBorder = true;\r\n\t\t\t\t\tthis.isFirstBorder = true;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// 判断 group 里的第一个 item\r\n\t\t\t\tif (this.group) {\r\n\t\t\t\t\tif (!this.group.isFirstBorder) {\r\n\t\t\t\t\t\tthis.group.isFirstBorder = true;\r\n\t\t\t\t\t\tthis.isFirstBorder = true;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis.border = this.form.border;\r\n\t\t\t\tthis.showMsg = errShowType;\r\n\t\t\t\tlet name = this.isArray ? this.arrayField : this.name;\r\n\t\t\t\tif(!name) return\r\n\t\t\t\tif (formRules && this.rules.length > 0) {\r\n\t\t\t\t\tif (!formRules[name]) {\r\n\t\t\t\t\t\tformRules[name] = {\r\n\t\t\t\t\t\t\trules: this.rules\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\tvalidator.updateSchema(formRules);\r\n\t\t\t\t}\r\n\t\t\t\tthis.formRules = formRules[name] || {};\r\n\t\t\t\tthis.validator = validator;\r\n\t\t\t} else {\r\n\t\t\t\tthis.labelPos = this.labelPosition || 'left';\r\n\t\t\t\tthis.labelWid = this.labelWidth || 65;\r\n\t\t\t\tthis.labelAli = this.labelAlign || 'left';\r\n\t\t\t}\r\n\t\t},\r\n\t\tunInit(){\r\n\t\t\tif (this.form) {\r\n\t\t\t\tthis.form.childrens.forEach((item, index) => {\r\n\t\t\t\t\tif (item === this) {\r\n\t\t\t\t\t\tthis.form.childrens.splice(index, 1)\r\n\t\t\t\t\t\tdelete this.form.formData[item.name]\r\n\t\t\t\t\t}\r\n\t\t\t\t})\r\n\t\t\t}\r\n\t\t},\r\n\t\t/**\r\n\t\t * 获取父元素实例\r\n\t\t */\r\n\t\tgetForm(name = 'uniForms') {\r\n\t\t\tlet parent = this.$parent;\r\n\t\t\tlet parentName = parent.$options.name;\r\n\t\t\twhile (parentName !== name) {\r\n\t\t\t\tparent = parent.$parent;\r\n\t\t\t\tif (!parent) return false;\r\n\t\t\t\tparentName = parent.$options.name;\r\n\t\t\t}\r\n\t\t\treturn parent;\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * 移除该表单项的校验结果\r\n\t\t */\r\n\t\tclearValidate() {\r\n\t\t\tthis.errMsg = '';\r\n\t\t},\r\n\t\t/**\r\n\t\t * 子组件调用，如 easyinput\r\n\t\t * @param {Object} value\r\n\t\t */\r\n\t\tsetValue(value) {\r\n\t\t\tlet name = this.isArray ? this.arrayField : this.name;\r\n\t\t\tif (name) {\r\n\t\t\t\tif (this.errMsg) this.errMsg = '';\r\n\t\t\t\t// 给组件赋值\r\n\t\t\t\tthis.form.formData[name] = this.form._getValue(name, value);\r\n\t\t\t\tif (!this.formRules || (typeof this.formRules && JSON.stringify(this.formRules) === '{}')) return;\r\n\t\t\t\tthis.triggerCheck(this.form._getValue(this.name, value));\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * 校验规则\r\n\t\t * @param {Object} value\r\n\t\t */\r\n\t\tasync triggerCheck(value,formTrigger) {\r\n\t\t\tlet promise = null;\r\n\t\t\tthis.errMsg = '';\r\n\t\t\t// fix by mehaotian 解决没有检验规则的情况下，抛出错误的问题\r\n\t\t\tif (!this.validator || Object.keys(this.formRules).length === 0) return;\r\n\t\t\tconst isNoField = this.isRequired(this.formRules.rules || []);\r\n\t\t\tlet isTrigger = this.isTrigger(this.formRules.validateTrigger, this.validateTrigger, this.form.validateTrigger);\r\n\t\t\tlet result = null;\r\n\t\t\tif (!!isTrigger || formTrigger) {\r\n\t\t\t\tlet name = this.isArray ? this.arrayField : this.name;\r\n\t\t\t\tresult = await this.validator.validateUpdate(\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t[name]: value\r\n\t\t\t\t\t},\r\n\t\t\t\t\tthis.form.formData\r\n\t\t\t\t);\r\n\t\t\t}\r\n\t\t\t// 判断是否必填,非必填，不填不校验，填写才校验\r\n\t\t\tif (!isNoField && (value === undefined || value === '')) {\r\n\t\t\t\tresult = null;\r\n\t\t\t}\r\n\t\t\tconst inputComp = this.form.inputChildrens.find(child => child.rename === this.name);\r\n\t\t\tif ((isTrigger ||　formTrigger) && result && result.errorMessage) {\r\n\t\t\t\tif (inputComp) {\r\n\t\t\t\t\tinputComp.errMsg = result.errorMessage;\r\n\t\t\t\t}\r\n\t\t\t\tif (this.form.errShowType === 'toast') {\r\n\t\t\t\t\tuni.showToast({\r\n\t\t\t\t\t\ttitle: result.errorMessage || '校验错误',\r\n\t\t\t\t\t\ticon: 'none'\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t\tif (this.form.errShowType === 'modal') {\r\n\t\t\t\t\tuni.showModal({\r\n\t\t\t\t\t\ttitle: '提示',\r\n\t\t\t\t\t\tcontent: result.errorMessage || '校验错误'\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tif (inputComp) {\r\n\t\t\t\t\tinputComp.errMsg = '';\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tthis.errMsg = !result ? '' : result.errorMessage;\r\n\t\t\t// 触发validate事件\r\n\t\t\tthis.form.validateCheck(result ? result : null);\r\n\t\t\t// typeof callback === 'function' && callback(result ? result : null);\r\n\t\t\t// if (promise) return promise\r\n\t\t\treturn result ? result : null;\r\n\t\t},\r\n\t\t/**\r\n\t\t * 触发时机\r\n\t\t * @param {Object} event\r\n\t\t */\r\n\t\tisTrigger(rule, itemRlue, parentRule) {\r\n\t\t\tlet rl = true;\r\n\t\t\t//  bind  submit\r\n\t\t\tif (rule === 'submit' || !rule) {\r\n\t\t\t\tif (rule === undefined) {\r\n\t\t\t\t\tif (itemRlue !== 'bind') {\r\n\t\t\t\t\t\tif (!itemRlue) {\r\n\t\t\t\t\t\t\treturn parentRule === 'bind' ? true : false;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\treturn false;\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn true;\r\n\t\t\t\t}\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t\treturn true;\r\n\t\t},\r\n\t\t// 是否有必填字段\r\n\t\tisRequired(rules) {\r\n\t\t\tlet isNoField = false;\r\n\t\t\tfor (let i = 0; i < rules.length; i++) {\r\n\t\t\t\tconst ruleData = rules[i];\r\n\t\t\t\tif (ruleData.required) {\r\n\t\t\t\t\tisNoField = true;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn isNoField;\r\n\t\t}\r\n\t}\r\n};\r\n</script>\r\n\r\n<style lang=\"scss\" >\r\n.uni-forms-item {\r\n\tposition: relative;\r\n\tpadding: 0px;\r\n\ttext-align: left;\r\n\tcolor: #333;\r\n\tfont-size: 14px;\r\n\t// margin-bottom: 22px;\r\n}\r\n\r\n.uni-forms-item__box {\r\n\tposition: relative;\r\n}\r\n\r\n.uni-forms-item__inner {\r\n\t/* #ifndef APP-NVUE */\r\n\tdisplay: flex;\r\n\t/* #endif */\r\n\t// flex-direction: row;\r\n\t// align-items: center;\r\n\tpadding-bottom: 22px;\r\n\t// margin-bottom: 22px;\r\n}\r\n\r\n.is-direction-left {\r\n\tflex-direction: row;\r\n}\r\n\r\n.is-direction-top {\r\n\tflex-direction: column;\r\n}\r\n\r\n.uni-forms-item__label {\r\n\t/* #ifndef APP-NVUE */\r\n\tdisplay: flex;\r\n\tflex-shrink: 0;\r\n\tbox-sizing: border-box;\r\n\t/* #endif */\r\n\tflex-direction: row;\r\n\talign-items: center;\r\n\twidth: 65px;\r\n\t// line-height: 2;\r\n\t// margin-top: 3px;\r\n\tpadding: 5px 0;\r\n\theight: 36px;\r\n\t// margin-right: 5px;\r\n\r\n\t.label-text {\r\n\t\tfont-size: 13px;\r\n\t\tcolor: #666666;\r\n\t}\r\n\t.label-seat {\r\n\t\tmargin-right: 5px;\r\n\t}\r\n}\r\n\r\n.uni-forms-item__content {\r\n\t/* #ifndef APP-NVUE */\r\n\twidth: 100%;\r\n\tbox-sizing: border-box;\r\n\tmin-height: 36px;\r\n\t/* #endif */\r\n\tflex: 1;\r\n}\r\n\r\n.label-icon {\r\n\tmargin-right: 5px;\r\n\tmargin-top: -1px;\r\n}\r\n\r\n// 必填\r\n.is-required {\r\n\t// color: $uni-color-error;\r\n\tcolor: #dd524d;\r\n\tfont-weight: bold;\r\n}\r\n\r\n.uni-error-message {\r\n\tposition: absolute;\r\n\tbottom: 0px;\r\n\tleft: 0;\r\n\ttext-align: left;\r\n}\r\n\r\n.uni-error-message-text {\r\n\tline-height: 22px;\r\n\tcolor: #dd524d;\r\n\tfont-size: 12px;\r\n}\r\n\r\n.uni-error-msg--boeder {\r\n\tposition: relative;\r\n\tbottom: 0;\r\n\tline-height: 22px;\r\n}\r\n\r\n.is-input-error-border {\r\n\tborder-color: #dd524d;\r\n}\r\n\r\n.uni-forms-item--border {\r\n\tmargin-bottom: 0;\r\n\tpadding: 10px 0;\r\n\t// padding-bottom: 0;\r\n\tborder-top: 1px #eee solid;\r\n\r\n\t.uni-forms-item__inner {\r\n\t\tpadding: 0;\r\n\t}\r\n}\r\n\r\n.uni-forms-item-error {\r\n\t// padding-bottom: 0;\r\n}\r\n\r\n.is-first-border {\r\n\t/* #ifndef APP-NVUE */\r\n\tborder: none;\r\n\t/* #endif */\r\n\t/* #ifdef APP-NVUE */\r\n\tborder-width: 0;\r\n\t/* #endif */\r\n}\r\n\r\n.uni-forms--no-padding {\r\n\tpadding: 0;\r\n}\r\n</style>\r\n","var pattern = {\r\n\temail: /^\\S+?@\\S+?\\.\\S+?$/,\r\n\tidcard: /^[1-9]\\d{5}(18|19|([23]\\d))\\d{2}((0[1-9])|(10|11|12))(([0-2][1-9])|10|20|30|31)\\d{3}[0-9Xx]$/,\r\n\turl: new RegExp(\r\n\t\t\"^(?!mailto:)(?:(?:http|https|ftp)://|//)(?:\\\\S+(?::\\\\S*)?@)?(?:(?:(?:[1-9]\\\\d?|1\\\\d\\\\d|2[01]\\\\d|22[0-3])(?:\\\\.(?:1?\\\\d{1,2}|2[0-4]\\\\d|25[0-5])){2}(?:\\\\.(?:[0-9]\\\\d?|1\\\\d\\\\d|2[0-4]\\\\d|25[0-4]))|(?:(?:[a-z\\\\u00a1-\\\\uffff0-9]+-*)*[a-z\\\\u00a1-\\\\uffff0-9]+)(?:\\\\.(?:[a-z\\\\u00a1-\\\\uffff0-9]+-*)*[a-z\\\\u00a1-\\\\uffff0-9]+)*(?:\\\\.(?:[a-z\\\\u00a1-\\\\uffff]{2,})))|localhost)(?::\\\\d{2,5})?(?:(/|\\\\?|#)[^\\\\s]*)?$\",\r\n\t\t'i')\r\n};\r\n\r\nconst FORMAT_MAPPING = {\r\n\t\"int\": 'integer',\r\n\t\"bool\": 'boolean',\r\n\t\"double\": 'number',\r\n\t\"long\": 'number',\r\n\t\"password\": 'string'\r\n\t// \"fileurls\": 'array'\r\n}\r\n\r\nfunction formatMessage(args, resources = '') {\r\n\tvar defaultMessage = ['label']\r\n\tdefaultMessage.forEach((item) => {\r\n\t\tif (args[item] === undefined) {\r\n\t\t\targs[item] = ''\r\n\t\t}\r\n\t})\r\n\r\n\tlet str = resources\r\n\tfor (let key in args) {\r\n\t\tlet reg = new RegExp('{' + key + '}')\r\n\t\tstr = str.replace(reg, args[key])\r\n\t}\r\n\treturn str\r\n}\r\n\r\nfunction isEmptyValue(value, type) {\r\n\tif (value === undefined || value === null) {\r\n\t\treturn true;\r\n\t}\r\n\r\n\tif (typeof value === 'string' && !value) {\r\n\t\treturn true;\r\n\t}\r\n\r\n\tif (Array.isArray(value) && !value.length) {\r\n\t\treturn true;\r\n\t}\r\n\r\n\tif (type === 'object' && !Object.keys(value).length) {\r\n\t\treturn true;\r\n\t}\r\n\r\n\treturn false;\r\n}\r\n\r\nconst types = {\r\n\tinteger(value) {\r\n\t\treturn types.number(value) && parseInt(value, 10) === value;\r\n\t},\r\n\tstring(value) {\r\n\t\treturn typeof value === 'string';\r\n\t},\r\n\tnumber(value) {\r\n\t\tif (isNaN(value)) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\treturn typeof value === 'number';\r\n\t},\r\n\t\"boolean\": function(value) {\r\n\t\treturn typeof value === 'boolean';\r\n\t},\r\n\t\"float\": function(value) {\r\n\t\treturn types.number(value) && !types.integer(value);\r\n\t},\r\n\tarray(value) {\r\n\t\treturn Array.isArray(value);\r\n\t},\r\n\tobject(value) {\r\n\t\treturn typeof value === 'object' && !types.array(value);\r\n\t},\r\n\tdate(value) {\r\n\t\treturn value instanceof Date;\r\n\t},\r\n\ttimestamp(value) {\r\n\t\tif (!this.integer(value) || Math.abs(value).toString().length > 16) {\r\n\t\t\treturn false\r\n\t\t}\r\n\t\treturn true;\r\n\t},\r\n\tfile(value) {\r\n\t\treturn typeof value.url === 'string';\r\n\t},\r\n\temail(value) {\r\n\t\treturn typeof value === 'string' && !!value.match(pattern.email) && value.length < 255;\r\n\t},\r\n\turl(value) {\r\n\t\treturn typeof value === 'string' && !!value.match(pattern.url);\r\n\t},\r\n\tpattern(reg, value) {\r\n\t\ttry {\r\n\t\t\treturn new RegExp(reg).test(value);\r\n\t\t} catch (e) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\t},\r\n\tmethod(value) {\r\n\t\treturn typeof value === 'function';\r\n\t},\r\n\tidcard(value) {\r\n\t\treturn typeof value === 'string' && !!value.match(pattern.idcard);\r\n\t},\r\n\t'url-https'(value) {\r\n\t\treturn this.url(value) && value.startsWith('https://');\r\n\t},\r\n\t'url-scheme'(value) {\r\n\t\treturn value.startsWith('://');\r\n\t},\r\n\t'url-web'(value) {\r\n\t\treturn false;\r\n\t}\r\n}\r\n\r\nclass RuleValidator {\r\n\r\n\tconstructor(message) {\r\n\t\tthis._message = message\r\n\t}\r\n\r\n\tasync validateRule(fieldKey, fieldValue, value, data, allData) {\r\n\t\tvar result = null\r\n\r\n\t\tlet rules = fieldValue.rules\r\n\r\n\t\tlet hasRequired = rules.findIndex((item) => {\r\n\t\t\treturn item.required\r\n\t\t})\r\n\t\tif (hasRequired < 0) {\r\n\t\t\tif (value === null || value === undefined) {\r\n\t\t\t\treturn result\r\n\t\t\t}\r\n\t\t\tif (typeof value === 'string' && !value.length) {\r\n\t\t\t\treturn result\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tvar message = this._message\r\n\r\n\t\tif (rules === undefined) {\r\n\t\t\treturn message['default']\r\n\t\t}\r\n\r\n\t\tfor (var i = 0; i < rules.length; i++) {\r\n\t\t\tlet rule = rules[i]\r\n\t\t\tlet vt = this._getValidateType(rule)\r\n\r\n\t\t\tObject.assign(rule, {\r\n\t\t\t\tlabel: fieldValue.label || `[\"${fieldKey}\"]`\r\n\t\t\t})\r\n\r\n\t\t\tif (RuleValidatorHelper[vt]) {\r\n\t\t\t\tresult = RuleValidatorHelper[vt](rule, value, message)\r\n\t\t\t\tif (result != null) {\r\n\t\t\t\t\tbreak\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif (rule.validateExpr) {\r\n\t\t\t\tlet now = Date.now()\r\n\t\t\t\tlet resultExpr = rule.validateExpr(value, allData, now)\r\n\t\t\t\tif (resultExpr === false) {\r\n\t\t\t\t\tresult = this._getMessage(rule, rule.errorMessage || this._message['default'])\r\n\t\t\t\t\tbreak\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif (rule.validateFunction) {\r\n\t\t\t\tresult = await this.validateFunction(rule, value, data, allData, vt)\r\n\t\t\t\tif (result !== null) {\r\n\t\t\t\t\tbreak\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (result !== null) {\r\n\t\t\tresult = message.TAG + result\r\n\t\t}\r\n\r\n\t\treturn result\r\n\t}\r\n\r\n\tasync validateFunction(rule, value, data, allData, vt) {\r\n\t\tlet result = null\r\n\t\ttry {\r\n\t\t\tlet callbackMessage = null\r\n\t\t\tconst res = await rule.validateFunction(rule, value, allData || data, (message) => {\r\n\t\t\t\tcallbackMessage = message\r\n\t\t\t})\r\n\t\t\tif (callbackMessage || (typeof res === 'string' && res) || res === false) {\r\n\t\t\t\tresult = this._getMessage(rule, callbackMessage || res, vt)\r\n\t\t\t}\r\n\t\t} catch (e) {\r\n\t\t\tresult = this._getMessage(rule, e.message, vt)\r\n\t\t}\r\n\t\treturn result\r\n\t}\r\n\r\n\t_getMessage(rule, message, vt) {\r\n\t\treturn formatMessage(rule, message || rule.errorMessage || this._message[vt] || message['default'])\r\n\t}\r\n\r\n\t_getValidateType(rule) {\r\n\t\tvar result = ''\r\n\t\tif (rule.required) {\r\n\t\t\tresult = 'required'\r\n\t\t} else if (rule.format) {\r\n\t\t\tresult = 'format'\r\n\t\t} else if (rule.arrayType) {\r\n\t\t\tresult = 'arrayTypeFormat'\r\n\t\t} else if (rule.range) {\r\n\t\t\tresult = 'range'\r\n\t\t} else if (rule.maximum !== undefined || rule.minimum !== undefined) {\r\n\t\t\tresult = 'rangeNumber'\r\n\t\t} else if (rule.maxLength !== undefined || rule.minLength !== undefined) {\r\n\t\t\tresult = 'rangeLength'\r\n\t\t} else if (rule.pattern) {\r\n\t\t\tresult = 'pattern'\r\n\t\t} else if (rule.validateFunction) {\r\n\t\t\tresult = 'validateFunction'\r\n\t\t}\r\n\t\treturn result\r\n\t}\r\n}\r\n\r\nconst RuleValidatorHelper = {\r\n\trequired(rule, value, message) {\r\n\t\tif (rule.required && isEmptyValue(value, rule.format || typeof value)) {\r\n\t\t\treturn formatMessage(rule, rule.errorMessage || message.required);\r\n\t\t}\r\n\r\n\t\treturn null\r\n\t},\r\n\r\n\trange(rule, value, message) {\r\n\t\tconst {\r\n\t\t\trange,\r\n\t\t\terrorMessage\r\n\t\t} = rule;\r\n\r\n\t\tlet list = new Array(range.length);\r\n\t\tfor (let i = 0; i < range.length; i++) {\r\n\t\t\tconst item = range[i];\r\n\t\t\tif (types.object(item) && item.value !== undefined) {\r\n\t\t\t\tlist[i] = item.value;\r\n\t\t\t} else {\r\n\t\t\t\tlist[i] = item;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tlet result = false\r\n\t\tif (Array.isArray(value)) {\r\n\t\t\tresult = (new Set(value.concat(list)).size === list.length);\r\n\t\t} else {\r\n\t\t\tif (list.indexOf(value) > -1) {\r\n\t\t\t\tresult = true;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (!result) {\r\n\t\t\treturn formatMessage(rule, errorMessage || message['enum']);\r\n\t\t}\r\n\r\n\t\treturn null\r\n\t},\r\n\r\n\trangeNumber(rule, value, message) {\r\n\t\tif (!types.number(value)) {\r\n\t\t\treturn formatMessage(rule, rule.errorMessage || message.pattern.mismatch);\r\n\t\t}\r\n\r\n\t\tlet {\r\n\t\t\tminimum,\r\n\t\t\tmaximum,\r\n\t\t\texclusiveMinimum,\r\n\t\t\texclusiveMaximum\r\n\t\t} = rule;\r\n\t\tlet min = exclusiveMinimum ? value <= minimum : value < minimum;\r\n\t\tlet max = exclusiveMaximum ? value >= maximum : value > maximum;\r\n\r\n\t\tif (minimum !== undefined && min) {\r\n\t\t\treturn formatMessage(rule, rule.errorMessage || message['number'][exclusiveMinimum ?\r\n\t\t\t\t'exclusiveMinimum' : 'minimum'\r\n\t\t\t])\r\n\t\t} else if (maximum !== undefined && max) {\r\n\t\t\treturn formatMessage(rule, rule.errorMessage || message['number'][exclusiveMaximum ?\r\n\t\t\t\t'exclusiveMaximum' : 'maximum'\r\n\t\t\t])\r\n\t\t} else if (minimum !== undefined && maximum !== undefined && (min || max)) {\r\n\t\t\treturn formatMessage(rule, rule.errorMessage || message['number'].range)\r\n\t\t}\r\n\r\n\t\treturn null\r\n\t},\r\n\r\n\trangeLength(rule, value, message) {\r\n\t\tif (!types.string(value) && !types.array(value)) {\r\n\t\t\treturn formatMessage(rule, rule.errorMessage || message.pattern.mismatch);\r\n\t\t}\r\n\r\n\t\tlet min = rule.minLength;\r\n\t\tlet max = rule.maxLength;\r\n\t\tlet val = value.length;\r\n\r\n\t\tif (min !== undefined && val < min) {\r\n\t\t\treturn formatMessage(rule, rule.errorMessage || message['length'].minLength)\r\n\t\t} else if (max !== undefined && val > max) {\r\n\t\t\treturn formatMessage(rule, rule.errorMessage || message['length'].maxLength)\r\n\t\t} else if (min !== undefined && max !== undefined && (val < min || val > max)) {\r\n\t\t\treturn formatMessage(rule, rule.errorMessage || message['length'].range)\r\n\t\t}\r\n\r\n\t\treturn null\r\n\t},\r\n\r\n\tpattern(rule, value, message) {\r\n\t\tif (!types['pattern'](rule.pattern, value)) {\r\n\t\t\treturn formatMessage(rule, rule.errorMessage || message.pattern.mismatch);\r\n\t\t}\r\n\r\n\t\treturn null\r\n\t},\r\n\r\n\tformat(rule, value, message) {\r\n\t\tvar customTypes = Object.keys(types);\r\n\t\tvar format = FORMAT_MAPPING[rule.format] ? FORMAT_MAPPING[rule.format] : (rule.format || rule.arrayType);\r\n\r\n\t\tif (customTypes.indexOf(format) > -1) {\r\n\t\t\tif (!types[format](value)) {\r\n\t\t\t\treturn formatMessage(rule, rule.errorMessage || message.typeError);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn null\r\n\t},\r\n\r\n\tarrayTypeFormat(rule, value, message) {\r\n\t\tif (!Array.isArray(value)) {\r\n\t\t\treturn formatMessage(rule, rule.errorMessage || message.typeError);\r\n\t\t}\r\n\r\n\t\tfor (let i = 0; i < value.length; i++) {\r\n\t\t\tconst element = value[i];\r\n\t\t\tlet formatResult = this.format(rule, element, message)\r\n\t\t\tif (formatResult !== null) {\r\n\t\t\t\treturn formatResult\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn null\r\n\t}\r\n}\r\n\r\nclass SchemaValidator extends RuleValidator {\r\n\r\n\tconstructor(schema, options) {\r\n\t\tsuper(SchemaValidator.message);\r\n\r\n\t\tthis._schema = schema\r\n\t\tthis._options = options || null\r\n\t}\r\n\r\n\tupdateSchema(schema) {\r\n\t\tthis._schema = schema\r\n\t}\r\n\r\n\tasync validate(data, allData) {\r\n\t\tlet result = this._checkFieldInSchema(data)\r\n\t\tif (!result) {\r\n\t\t\tresult = await this.invokeValidate(data, false, allData)\r\n\t\t}\r\n\t\treturn result.length ? result[0] : null\r\n\t}\r\n\r\n\tasync validateAll(data, allData) {\r\n\t\tlet result = this._checkFieldInSchema(data)\r\n\t\tif (!result) {\r\n\t\t\tresult = await this.invokeValidate(data, true, allData)\r\n\t\t}\r\n\t\treturn result\r\n\t}\r\n\r\n\tasync validateUpdate(data, allData) {\r\n\t\tlet result = this._checkFieldInSchema(data)\r\n\t\tif (!result) {\r\n\t\t\tresult = await this.invokeValidateUpdate(data, false, allData)\r\n\t\t}\r\n\t\treturn result.length ? result[0] : null\r\n\t}\r\n\r\n\tasync invokeValidate(data, all, allData) {\r\n\t\tlet result = []\r\n\t\tlet schema = this._schema\r\n\t\tfor (let key in schema) {\r\n\t\t\tlet value = schema[key]\r\n\t\t\tlet errorMessage = await this.validateRule(key, value, data[key], data, allData)\r\n\t\t\tif (errorMessage != null) {\r\n\t\t\t\tresult.push({\r\n\t\t\t\t\tkey,\r\n\t\t\t\t\terrorMessage\r\n\t\t\t\t})\r\n\t\t\t\tif (!all) break\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn result\r\n\t}\r\n\r\n\tasync invokeValidateUpdate(data, all, allData) {\r\n\t\tlet result = []\r\n\t\tfor (let key in data) {\r\n\t\t\tlet errorMessage = await this.validateRule(key, this._schema[key], data[key], data, allData)\r\n\t\t\tif (errorMessage != null) {\r\n\t\t\t\tresult.push({\r\n\t\t\t\t\tkey,\r\n\t\t\t\t\terrorMessage\r\n\t\t\t\t})\r\n\t\t\t\tif (!all) break\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn result\r\n\t}\r\n\r\n\t_checkFieldInSchema(data) {\r\n\t\tvar keys = Object.keys(data)\r\n\t\tvar keys2 = Object.keys(this._schema)\r\n\t\tif (new Set(keys.concat(keys2)).size === keys2.length) {\r\n\t\t\treturn ''\r\n\t\t}\r\n\r\n\t\tvar noExistFields = keys.filter((key) => {\r\n\t\t\treturn keys2.indexOf(key) < 0;\r\n\t\t})\r\n\t\tvar errorMessage = formatMessage({\r\n\t\t\tfield: JSON.stringify(noExistFields)\r\n\t\t}, SchemaValidator.message.TAG + SchemaValidator.message['defaultInvalid'])\r\n\t\treturn [{\r\n\t\t\tkey: 'invalid',\r\n\t\t\terrorMessage\r\n\t\t}]\r\n\t}\r\n}\r\n\r\nfunction Message() {\r\n\treturn {\r\n\t\tTAG: \"\",\r\n\t\tdefault: '验证错误',\r\n\t\tdefaultInvalid: '提交的字段{field}在数据库中并不存在',\r\n\t\tvalidateFunction: '验证无效',\r\n\t\trequired: '{label}必填',\r\n\t\t'enum': '{label}超出范围',\r\n\t\ttimestamp: '{label}格式无效',\r\n\t\twhitespace: '{label}不能为空',\r\n\t\ttypeError: '{label}类型无效',\r\n\t\tdate: {\r\n\t\t\tformat: '{label}日期{value}格式无效',\r\n\t\t\tparse: '{label}日期无法解析,{value}无效',\r\n\t\t\tinvalid: '{label}日期{value}无效'\r\n\t\t},\r\n\t\tlength: {\r\n\t\t\tminLength: '{label}长度不能少于{minLength}',\r\n\t\t\tmaxLength: '{label}长度不能超过{maxLength}',\r\n\t\t\trange: '{label}必须介于{minLength}和{maxLength}之间'\r\n\t\t},\r\n\t\tnumber: {\r\n\t\t\tminimum: '{label}不能小于{minimum}',\r\n\t\t\tmaximum: '{label}不能大于{maximum}',\r\n\t\t\texclusiveMinimum: '{label}不能小于等于{minimum}',\r\n\t\t\texclusiveMaximum: '{label}不能大于等于{maximum}',\r\n\t\t\trange: '{label}必须介于{minimum}and{maximum}之间'\r\n\t\t},\r\n\t\tpattern: {\r\n\t\t\tmismatch: '{label}格式不匹配'\r\n\t\t}\r\n\t};\r\n}\r\n\r\n\r\nSchemaValidator.message = new Message();\r\n\r\nexport default SchemaValidator\n","<template>\r\n\t<view class=\"uni-forms\" :class=\"{ 'uni-forms--top': !border }\">\r\n\t\t<form @submit.stop=\"submitForm\" @reset=\"resetForm\">\r\n\t\t\t<slot></slot>\r\n\t\t</form>\r\n\t</view>\r\n</template>\r\n\r\n<script>\r\n\t// #ifndef VUE3\r\n\timport Vue from 'vue';\r\n\tVue.prototype.binddata = function(name, value, formName) {\r\n\t\tif (formName) {\r\n\t\t\tthis.$refs[formName].setValue(name, value);\r\n\t\t} else {\r\n\t\t\tlet formVm;\r\n\t\t\tfor (let i in this.$refs) {\r\n\t\t\t\tconst vm = this.$refs[i];\r\n\t\t\t\tif (vm && vm.$options && vm.$options.name === 'uniForms') {\r\n\t\t\t\t\tformVm = vm;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif (!formVm) return console.error('当前 uni-froms 组件缺少 ref 属性');\r\n\t\t\tformVm.setValue(name, value);\r\n\t\t}\r\n\t};\r\n\t// #endif\r\n\r\n\r\n\r\n\timport Validator from './validate.js';\r\n\t/**\r\n\t * Forms 表单\r\n\t * @description 由输入框、选择器、单选框、多选框等控件组成，用以收集、校验、提交数据\r\n\t * @tutorial https://ext.dcloud.net.cn/plugin?id=2773\r\n\t * @property {Object} rules\t表单校验规则\r\n\t * @property {String} validateTrigger = [bind|submit]\t校验触发器方式 默认 submit\r\n\t * @value bind\t\t发生变化时触发\r\n\t * @value submit\t提交时触发\r\n\t * @property {String} labelPosition = [top|left]\tlabel 位置 默认 left\r\n\t * @value top\t\t顶部显示 label\r\n\t * @value left\t左侧显示 label\r\n\t * @property {String} labelWidth\tlabel 宽度，默认 65px\r\n\t * @property {String} labelAlign = [left|center|right]\tlabel 居中方式  默认 left\r\n\t * @value left\t\tlabel 左侧显示\r\n\t * @value center\tlabel 居中\r\n\t * @value right\t\tlabel 右侧对齐\r\n\t * @property {String} errShowType = [undertext|toast|modal]\t校验错误信息提示方式\r\n\t * @value undertext\t错误信息在底部显示\r\n\t * @value toast\t\t\t错误信息toast显示\r\n\t * @value modal\t\t\t错误信息modal显示\r\n\t * @event {Function} submit\t提交时触发\r\n\t */\r\n\r\n\texport default {\r\n\t\tname: 'uniForms',\r\n\t\tcomponents: {},\r\n\t\temits:['input','reset','validate','submit'],\r\n\t\tprops: {\r\n\t\t\t// 即将弃用\r\n\t\t\tvalue: {\r\n\t\t\t\ttype: Object,\r\n\t\t\t\tdefault () {\r\n\t\t\t\t\treturn {};\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\t// 替换 value 属性\r\n\t\t\tmodelValue: {\r\n\t\t\t\ttype: Object,\r\n\t\t\t\tdefault () {\r\n\t\t\t\t\treturn {};\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\t// 表单校验规则\r\n\t\t\trules: {\r\n\t\t\t\ttype: Object,\r\n\t\t\t\tdefault () {\r\n\t\t\t\t\treturn {};\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\t// 校验触发器方式，默认 关闭\r\n\t\t\tvalidateTrigger: {\r\n\t\t\t\ttype: String,\r\n\t\t\t\tdefault: ''\r\n\t\t\t},\r\n\t\t\t// label 位置，可选值 top/left\r\n\t\t\tlabelPosition: {\r\n\t\t\t\ttype: String,\r\n\t\t\t\tdefault: 'left'\r\n\t\t\t},\r\n\t\t\t// label 宽度，单位 px\r\n\t\t\tlabelWidth: {\r\n\t\t\t\ttype: [String, Number],\r\n\t\t\t\tdefault: ''\r\n\t\t\t},\r\n\t\t\t// label 居中方式，可选值 left/center/right\r\n\t\t\tlabelAlign: {\r\n\t\t\t\ttype: String,\r\n\t\t\t\tdefault: 'left'\r\n\t\t\t},\r\n\t\t\terrShowType: {\r\n\t\t\t\ttype: String,\r\n\t\t\t\tdefault: 'undertext'\r\n\t\t\t},\r\n\t\t\tborder: {\r\n\t\t\t\ttype: Boolean,\r\n\t\t\t\tdefault: false\r\n\t\t\t}\r\n\t\t},\r\n\t\tdata() {\r\n\t\t\treturn {\r\n\t\t\t\tformData: {}\r\n\t\t\t};\r\n\t\t},\r\n\t\tcomputed: {\r\n\t\t\tdataValue() {\r\n\t\t\t\tif (JSON.stringify(this.modelValue) === '{}') {\r\n\t\t\t\t\treturn this.value\r\n\t\t\t\t} else {\r\n\t\t\t\t\treturn this.modelValue\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\twatch: {\r\n\t\t\trules(newVal) {\r\n\t\t\t\t// 如果规则发生变化，要初始化组件\r\n\t\t\t\tthis.init(newVal);\r\n\t\t\t},\r\n\t\t\tlabelPosition() {\r\n\t\t\t\tthis.childrens.forEach(vm => {\r\n\t\t\t\t\tvm.init()\r\n\t\t\t\t})\r\n\t\t\t}\r\n\t\t},\r\n\t\tcreated() {\r\n\t\t\t// #ifdef VUE3\r\n\t\t\tlet getbinddata = getApp().$vm.$.appContext.config.globalProperties.binddata\r\n\t\t\tif (!getbinddata) {\r\n\t\t\t\tgetApp().$vm.$.appContext.config.globalProperties.binddata = function(name, value, formName) {\r\n\t\t\t\t\tif (formName) {\r\n\t\t\t\t\t\tthis.$refs[formName].setValue(name, value);\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tlet formVm;\r\n\t\t\t\t\t\tfor (let i in this.$refs) {\r\n\t\t\t\t\t\t\tconst vm = this.$refs[i];\r\n\t\t\t\t\t\t\tif (vm && vm.$options && vm.$options.name === 'uniForms') {\r\n\t\t\t\t\t\t\t\tformVm = vm;\r\n\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif (!formVm) return console.error('当前 uni-froms 组件缺少 ref 属性');\r\n\t\t\t\t\t\tformVm.setValue(name, value);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t// #endif\r\n\r\n\t\t\t// 存放watch 监听数组\r\n\t\t\tthis.unwatchs = [];\r\n\t\t\t// 存放子组件数组\r\n\t\t\tthis.childrens = [];\r\n\t\t\t// 存放 easyInput 组件\r\n\t\t\tthis.inputChildrens = [];\r\n\t\t\t// 存放 dataCheckbox 组件\r\n\t\t\tthis.checkboxChildrens = [];\r\n\t\t\t// 存放规则\r\n\t\t\tthis.formRules = [];\r\n\t\t\tthis.init(this.rules);\r\n\t\t},\r\n\t\t// mounted() {\r\n\t\t// \tthis.init(this.rules)\r\n\t\t// },\r\n\t\tmethods: {\r\n\t\t\tinit(formRules) {\r\n\t\t\t\t// 判断是否有规则\r\n\t\t\t\tif (Object.keys(formRules).length === 0) {\r\n\t\t\t\t\tthis.formData = this.dataValue\r\n\t\t\t\t\treturn\r\n\t\t\t\t};\r\n\t\t\t\tthis.formRules = formRules;\r\n\t\t\t\tthis.validator = new Validator(formRules);\r\n\t\t\t\tthis.registerWatch();\r\n\t\t\t},\r\n\t\t\t// 监听 watch\r\n\t\t\tregisterWatch() {\r\n\t\t\t\t// 取消监听,避免多次调用 init 重复执行 $watch\r\n\t\t\t\tthis.unwatchs.forEach(v => v());\r\n\t\t\t\tthis.childrens.forEach((v) => {\r\n\t\t\t\t\tv.init()\r\n\t\t\t\t})\r\n\t\t\t\t// watch 每个属性 ，需要知道具体那个属性发变化\r\n\t\t\t\tObject.keys(this.dataValue).forEach(key => {\r\n\t\t\t\t\tlet watch = this.$watch(\r\n\t\t\t\t\t\t'dataValue.' + key,\r\n\t\t\t\t\t\tvalue => {\r\n\t\t\t\t\t\t\tif (!value) return\r\n\t\t\t\t\t\t\t// 如果是对象 ，则平铺内容\r\n\t\t\t\t\t\t\tif (value.toString() === '[object Object]') {\r\n\t\t\t\t\t\t\t\tfor (let i in value) {\r\n\t\t\t\t\t\t\t\t\tlet name = `${key}[${i}]`;\r\n\t\t\t\t\t\t\t\t\tthis.formData[name] = this._getValue(name, value[i]);\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\tthis.formData[key] = this._getValue(key, value);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tdeep: true,\r\n\t\t\t\t\t\t\timmediate: true\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t);\r\n\t\t\t\t\tthis.unwatchs.push(watch);\r\n\t\t\t\t});\r\n\t\t\t},\r\n\t\t\t/**\r\n\t\t\t * 公开给用户使用\r\n\t\t\t * 设置校验规则\r\n\t\t\t * @param {Object} formRules\r\n\t\t\t */\r\n\t\t\tsetRules(formRules) {\r\n\t\t\t\tthis.init(formRules);\r\n\t\t\t},\r\n\t\t\t/**\r\n\t\t\t * 公开给用户使用\r\n\t\t\t * 设置自定义表单组件 value 值\r\n\t\t\t *  @param {String} name 字段名称\r\n\t\t\t *  @param {String} value 字段值\r\n\t\t\t */\r\n\t\t\tsetValue(name, value, callback) {\r\n\t\t\t\tlet example = this.childrens.find(child => child.name === name);\r\n\t\t\t\tif (!example) return null;\r\n\t\t\t\tvalue = this._getValue(example.name, value);\r\n\t\t\t\tthis.formData[name] = value;\r\n\t\t\t\texample.val = value;\r\n\t\t\t\treturn example.triggerCheck(value, callback);\r\n\t\t\t},\r\n\r\n\t\t\t/**\r\n\t\t\t * 表单重置\r\n\t\t\t * @param {Object} event\r\n\t\t\t */\r\n\t\t\tresetForm(event) {\r\n\t\t\t\tthis.childrens.forEach(item => {\r\n\t\t\t\t\titem.errMsg = '';\r\n\t\t\t\t\tconst inputComp = this.inputChildrens.find(child => child.rename === item.name);\r\n\t\t\t\t\tif (inputComp) {\r\n\t\t\t\t\t\tinputComp.errMsg = '';\r\n\t\t\t\t\t\t// fix by mehaotian 不触发其他组件的 setValue\r\n\t\t\t\t\t\tinputComp.is_reset = true\r\n\t\t\t\t\t\tinputComp.$emit('input', inputComp.multiple ? [] : '');\r\n\t\t\t\t\t\tinputComp.$emit('update:modelValue', inputComp.multiple ? [] : '');\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\r\n\t\t\t\tthis.childrens.forEach(item => {\r\n\t\t\t\t\tif (item.name) {\r\n\t\t\t\t\t\tthis.formData[item.name] = this._getValue(item.name, '');\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\r\n\t\t\t\tthis.$emit('reset', event);\r\n\t\t\t},\r\n\r\n\t\t\t/**\r\n\t\t\t * 触发表单校验，通过 @validate 获取\r\n\t\t\t * @param {Object} validate\r\n\t\t\t */\r\n\t\t\tvalidateCheck(validate) {\r\n\t\t\t\tif (validate === null) validate = null;\r\n\t\t\t\tthis.$emit('validate', validate);\r\n\t\t\t},\r\n\t\t\t/**\r\n\t\t\t * 校验所有或者部分表单\r\n\t\t\t */\r\n\t\t\tasync validateAll(invalidFields, type, keepitem, callback) {\r\n\t\t\t\tlet childrens = []\r\n\t\t\t\tfor (let i in invalidFields) {\r\n\t\t\t\t\tconst item = this.childrens.find(v => v.name === i)\r\n\t\t\t\t\tif (item) {\r\n\t\t\t\t\t\tchildrens.push(item)\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (!callback && typeof keepitem === 'function') {\r\n\t\t\t\t\tcallback = keepitem;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tlet promise;\r\n\t\t\t\tif (!callback && typeof callback !== 'function' && Promise) {\r\n\t\t\t\t\tpromise = new Promise((resolve, reject) => {\r\n\t\t\t\t\t\tcallback = function(valid, invalidFields) {\r\n\t\t\t\t\t\t\t!valid ? resolve(invalidFields) : reject(valid);\r\n\t\t\t\t\t\t};\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\r\n\t\t\t\tlet results = [];\r\n\t\t\t\tlet newFormData = {};\r\n\t\t\t\tif (this.validator) {\r\n\t\t\t\t\tfor (let key in childrens) {\r\n\t\t\t\t\t\tconst child = childrens[key];\r\n\t\t\t\t\t\tlet name = child.isArray ? child.arrayField : child.name;\r\n\t\t\t\t\t\tif (child.isArray) {\r\n\t\t\t\t\t\t\tif (child.name.indexOf('[') !== -1 && child.name.indexOf(']') !== -1) {\r\n\t\t\t\t\t\t\t\tconst fieldData = child.name.split('[');\r\n\t\t\t\t\t\t\t\tconst fieldName = fieldData[0];\r\n\t\t\t\t\t\t\t\tconst fieldValue = fieldData[1].replace(']', '');\r\n\t\t\t\t\t\t\t\tif (!newFormData[fieldName]) {\r\n\t\t\t\t\t\t\t\t\tnewFormData[fieldName] = {};\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\tnewFormData[fieldName][fieldValue] = this._getValue(name, invalidFields[name]);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tnewFormData[name] = this._getValue(name, invalidFields[name]);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tconst result = await child.triggerCheck(invalidFields[name], true);\r\n\t\t\t\t\t\tif (result) {\r\n\t\t\t\t\t\t\tresults.push(result);\r\n\t\t\t\t\t\t\tif (this.errShowType === 'toast' || this.errShowType === 'modal') break;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\tnewFormData = invalidFields\r\n\t\t\t\t}\r\n\t\t\t\tif (Array.isArray(results)) {\r\n\t\t\t\t\tif (results.length === 0) results = null;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (Array.isArray(keepitem)) {\r\n\t\t\t\t\tkeepitem.forEach(v => {\r\n\t\t\t\t\t\tnewFormData[v] = this.dataValue[v];\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (type === 'submit') {\r\n\t\t\t\t\tthis.$emit('submit', {\r\n\t\t\t\t\t\tdetail: {\r\n\t\t\t\t\t\t\tvalue: newFormData,\r\n\t\t\t\t\t\t\terrors: results\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t});\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis.$emit('validate', results);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tcallback && typeof callback === 'function' && callback(results, newFormData);\r\n\r\n\t\t\t\tif (promise && callback) {\r\n\t\t\t\t\treturn promise;\r\n\t\t\t\t} else {\r\n\t\t\t\t\treturn null;\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tsubmitForm() {},\r\n\t\t\t/**\r\n\t\t\t * 外部调用方法\r\n\t\t\t * 手动提交校验表单\r\n\t\t\t * 对整个表单进行校验的方法，参数为一个回调函数。\r\n\t\t\t */\r\n\t\t\tsubmit(keepitem, callback, type) {\r\n\t\t\t\tfor (let i in this.dataValue) {\r\n\t\t\t\t\tconst itemData = this.childrens.find(v => v.name === i);\r\n\t\t\t\t\tif (itemData) {\r\n\t\t\t\t\t\tif (this.formData[i] === undefined) {\r\n\t\t\t\t\t\t\tthis.formData[i] = this._getValue(i, this.dataValue[i]);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tif (!type) {\r\n\t\t\t\t\tconsole.warn('submit 方法即将废弃，请使用validate方法代替！');\r\n\t\t\t\t}\r\n\t\t\t\treturn this.validateAll(this.formData, 'submit', keepitem, callback);\r\n\t\t\t},\r\n\r\n\t\t\t/**\r\n\t\t\t * 外部调用方法\r\n\t\t\t * 校验表单\r\n\t\t\t * 对整个表单进行校验的方法，参数为一个回调函数。\r\n\t\t\t */\r\n\t\t\tvalidate(keepitem, callback) {\r\n\t\t\t\treturn this.submit(keepitem, callback, true);\r\n\t\t\t},\r\n\r\n\t\t\t/**\r\n\t\t\t * 部分表单校验\r\n\t\t\t * @param {Object} props\r\n\t\t\t * @param {Object} cb\r\n\t\t\t */\r\n\t\t\tvalidateField(props, callback) {\r\n\t\t\t\tprops = [].concat(props);\r\n\t\t\t\tlet invalidFields = {};\r\n\t\t\t\tthis.childrens.forEach(item => {\r\n\t\t\t\t\tif (props.indexOf(item.name) !== -1) {\r\n\t\t\t\t\t\tinvalidFields = Object.assign({}, invalidFields, {\r\n\t\t\t\t\t\t\t[item.name]: this.formData[item.name]\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t\treturn this.validateAll(invalidFields, 'submit', [], callback);\r\n\t\t\t},\r\n\r\n\t\t\t/**\r\n\t\t\t * 对整个表单进行重置，将所有字段值重置为初始值并移除校验结果\r\n\t\t\t */\r\n\t\t\tresetFields() {\r\n\t\t\t\tthis.resetForm();\r\n\t\t\t},\r\n\r\n\t\t\t/**\r\n\t\t\t * 移除表单项的校验结果。传入待移除的表单项的 prop 属性或者 prop 组成的数组，如不传则移除整个表单的校验结果\r\n\t\t\t */\r\n\t\t\tclearValidate(props) {\r\n\t\t\t\tprops = [].concat(props);\r\n\t\t\t\tthis.childrens.forEach(item => {\r\n\t\t\t\t\tconst inputComp = this.inputChildrens.find(child => child.rename === item.name);\r\n\t\t\t\t\tif (props.length === 0) {\r\n\t\t\t\t\t\titem.errMsg = '';\r\n\t\t\t\t\t\tif (inputComp) {\r\n\t\t\t\t\t\t\tinputComp.errMsg = '';\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tif (props.indexOf(item.name) !== -1) {\r\n\t\t\t\t\t\t\titem.errMsg = '';\r\n\t\t\t\t\t\t\tif (inputComp) {\r\n\t\t\t\t\t\t\t\tinputComp.errMsg = '';\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t},\r\n\t\t\t/**\r\n\t\t\t * 把 value 转换成指定的类型\r\n\t\t\t * @param {Object} key\r\n\t\t\t * @param {Object} value\r\n\t\t\t */\r\n\t\t\t_getValue(key, value) {\r\n\t\t\t\tconst rules = (this.formRules[key] && this.formRules[key].rules) || [];\r\n\t\t\t\tconst isRuleNum = rules.find(val => val.format && this.type_filter(val.format));\r\n\t\t\t\tconst isRuleBool = rules.find(val => (val.format && val.format === 'boolean') || val.format === 'bool');\r\n\t\t\t\t// 输入值为 number\r\n\t\t\t\tif (isRuleNum) {\r\n\t\t\t\t\tvalue = isNaN(value) ? value : value === '' || value === null ? null : Number(value);\r\n\t\t\t\t}\r\n\t\t\t\t// 简单判断真假值\r\n\t\t\t\tif (isRuleBool) {\r\n\t\t\t\t\tvalue = !value ? false : true;\r\n\t\t\t\t}\r\n\t\t\t\treturn value;\r\n\t\t\t},\r\n\t\t\t/**\r\n\t\t\t * 过滤数字类型\r\n\t\t\t * @param {Object} format\r\n\t\t\t */\r\n\t\t\ttype_filter(format) {\r\n\t\t\t\treturn format === 'int' || format === 'double' || format === 'number' || format === 'timestamp';\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n</script>\r\n\r\n<style lang=\"scss\" >\r\n\t.uni-forms {\r\n\t\t// overflow: hidden;\r\n\t\t// padding: 10px 15px;\r\n\t}\r\n\r\n\t.uni-forms--top {\r\n\t\t// padding: 10px 15px;\r\n\t\t// padding-top: 22px;\r\n\t}\r\n</style>\r\n"],"names":["name","props","custom","type","Boolean","default","showMessage","String","required","validateTrigger","leftIcon","iconColor","label","labelWidth","Number","labelAlign","labelPosition","errorMessage","rules","Array","data","errorTop","errorBottom","labelMarginBottom","errorWidth","errMsg","val","labelPos","labelWid","labelAli","showMsg","border","isFirstBorder","isArray","arrayField","computed","msg","this","fieldStyle","style","padding","paddingBottom","justifyContent","labelLeft","parseInt","watch","trigger","formTrigger","created","form","getForm","group","formRules","indexOf","formData","_getValue","mounted","childrens","push","init","unmounted","__isUnmounted","unInit","methods","validator","value","errShowType","length","updateSchema","forEach","item","index","splice","parent","$parent","parentName","$options","clearValidate","setValue","JSON","stringify","triggerCheck","async","Object","keys","isNoField","isRequired","isTrigger","result","validateUpdate","inputComp","inputChildrens","find","child","rename","title","icon","content","validateCheck","rule","itemRlue","parentRule","i","_createBlock","_component_v_uni_view","class","$data","_createVNode","_renderSlot","_ctx","$props","_component_v_uni_text","_component_uni_icons","size","color","pattern","email","idcard","url","RegExp","FORMAT_MAPPING","int","bool","double","long","password","args","resources","str","key","reg","replace","types","integer","number","string","isNaN","boolean","float","array","object","date","Date","timestamp","Math","abs","toString","file","match","test","e","method","startsWith","RuleValidatorHelper","message","isEmptyValue","format","formatMessage","range","list","Set","concat","rangeNumber","mismatch","minimum","maximum","exclusiveMinimum","exclusiveMaximum","min","max","rangeLength","minLength","maxLength","customTypes","arrayType","typeError","arrayTypeFormat","element","formatResult","SchemaValidator","constructor","_message","fieldKey","fieldValue","allData","findIndex","vt","_getValidateType","assign","validateExpr","now","_getMessage","validateFunction","TAG","callbackMessage","res","schema","options","_schema","_options","_checkFieldInSchema","invokeValidate","invokeValidateUpdate","all","validateRule","keys2","noExistFields","filter","field","defaultInvalid","enum","whitespace","parse","invalid","components","emits","modelValue","dataValue","newVal","getApp","$vm","$","appContext","config","globalProperties","binddata","formName","$refs","formVm","vm","console","error","unwatchs","checkboxChildrens","Validator","registerWatch","v","$watch","deep","immediate","setRules","callback","example","resetForm","event","is_reset","$emit","multiple","validate","invalidFields","keepitem","promise","Promise","resolve","reject","valid","invalidFields2","results","newFormData","fieldData","split","fieldName","detail","errors","submitForm","submit","warn","validateAll","validateField","resetFields","isRuleNum","type_filter","isRuleBool","_component_v_uni_form","onSubmit","onReset"],"mappings":"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"}