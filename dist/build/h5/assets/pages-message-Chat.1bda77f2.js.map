{"version":3,"file":"pages-message-Chat.1bda77f2.js","sources":["../../../../src/pages/message/Chat.vue"],"sourcesContent":["<template>\r\n  <view class=\"chat-wraper\">\r\n    <ChatContent :key=\"currentDate\" :msgList=\"messageInfo\"></ChatContent>\r\n    <view class=\"send-msg\">\r\n      <input\r\n        type=\"text\"\r\n        placeholder=\"请输入消息\"\r\n        v-model=\"inputString\"\r\n        class=\"send\"\r\n        @confirm=\"onConfirm\"\r\n      />\r\n    </view>\r\n  </view>\r\n</template>\r\n\r\n<script>\r\nimport {\r\n  onMounted,\r\n  computed,\r\n  ref,\r\n  watch,\r\n  onUpdated,\r\n  onBeforeUpdate,\r\n} from \"vue\";\r\nimport openIM from \"@/utils/openIM.js\";\r\nimport { getIMToken } from \"../../utils/auth.js\";\r\nimport { useStore } from \"vuex\";\r\nimport ChatContent from \"./ChatContent.vue\";\r\nimport { connectIM } from \"@/utils/im.js\";\r\nimport { shielded, getShieled } from \"@/api/user.js\";\r\nexport default {\r\n  components: {\r\n    ChatContent,\r\n  },\r\n  onShow: function (showprops) {\r\n    this.currentDate = new Date() + Math.random();\r\n    setTimeout(() => {\r\n      this.getConver();\r\n    }, 1000);\r\n  },\r\n  onLoad: function (options) {\r\n    this.propsOptions = options;\r\n  },\r\n  onNavigationBarButtonTap(e) {\r\n    console.log(\"button ... e=================\", e);\r\n    const operations = this.operations;\r\n    const propsOptions = this.propsOptions;\r\n    uni.showActionSheet({\r\n      itemList: operations,\r\n      success: function (res) {\r\n        console.log(\"选中了第\" + (res.tapIndex + 1) + \"个按钮\");\r\n        if (res.tapIndex + 1 === 1) {\r\n          console.log(\"propsOptions.value.userID=====\", propsOptions.userID);\r\n          uni.navigateTo({\r\n            url: `/pages/message/Inform?account=${propsOptions.userID}`,\r\n          });\r\n        } else {\r\n          uni.showModal({\r\n            title: \"屏蔽用户\",\r\n            content: \"屏蔽后，您将不再收到对方的消息\",\r\n            success: function (res) {\r\n              console.log(\"res=============\", res);\r\n              if (res.confirm) {\r\n                console.log(\"用户点击确定\");\r\n                console.log(\r\n                  \"propsOptions.conversationID===\",\r\n                  propsOptions.conversationID\r\n                );\r\n                // const conversationID = propsOptions.conversationID\r\n                // openIM.deleteConversation(conversationID,({data}) => {\r\n                //   console.log('data================', data)\r\n                // })\r\n                const params = {\r\n                  shieldedParty: propsOptions.userID,\r\n                };\r\n                shielded(params).then((data) => {\r\n                  if (data.data.code === 200) {\r\n                    uni.showToast({\r\n                      title: data.data.msg,\r\n                      duration: 2000,\r\n                    });\r\n                  }\r\n                });\r\n              } else if (res.cancel) {\r\n                console.log(\"用户点击取消\");\r\n              }\r\n            },\r\n          });\r\n        }\r\n      },\r\n      fail: function (res) {\r\n        console.log(res.errMsg);\r\n      },\r\n    });\r\n  },\r\n  setup(props) {\r\n    let propsOptions = ref(null);\r\n    let inputString = ref(\"\");\r\n    const messageInfo = ref([]);\r\n    let operations = ref([\"举报\", \"屏蔽\"]);\r\n    const forbidden = ref(false);\r\n\r\n    const store = useStore();\r\n\r\n    console.log(\r\n      \"store.state.user===========================================================================\",\r\n      store.getters[\"user/getUserInfo\"]\r\n    );\r\n    const userInfo = computed(() => store.getters[\"user/getUserInfo\"]).value;\r\n\r\n    const monitorOnRecv = () => {\r\n      openIM.on(\"OnRecvNewMessage\", (data) => {\r\n        const RecvMessage = JSON.parse(data.data);\r\n        if (RecvMessage.contentType === 101) {\r\n          messageInfo.value.unshift(RecvMessage);\r\n        }\r\n      });\r\n    };\r\n\r\n    const getConver = () => {\r\n      // connectIM(userInfo.phone, getIMToken())\r\n      const options = {\r\n        groupID: \"\", // 群聊ID，拉取群聊时传入，否则为“”\r\n        startClientMsgID: \"\", // 上一次拉取的最后一条消息ID或空字符串,为空字符则从最新一条开始\r\n        count: 10000, // 每次拉取条数\r\n        // userID: props.userID, // 用户ID，拉取单聊时传入，否则为“”\r\n        userID: propsOptions.value.userID, // 用户ID，拉取单聊时传入，否则为“”\r\n      };\r\n      openIM\r\n        .getHistoryMessageList(options)\r\n        .then(({ data }) => {\r\n          console.log(\"历史数据=\", JSON.parse(data));\r\n          messageInfo.value = [...JSON.parse(data).reverse()];\r\n        })\r\n        .catch((err) => {\r\n          console.log(\"err 000000000000000000000000000000000000000000=\", err);\r\n        });\r\n    };\r\n\r\n    // 获取被屏蔽列表\r\n    const getShieleds = async(account) => {\r\n      const params = {\r\n        shielding_party: account,\r\n      };\r\n      console.log(\"params=============\", params);\r\n      return await getShieled(params).then((data) => {\r\n        console.log(\"data============\", data);\r\n        if (data.data.code === 200 && data.data.flag === 1) {\r\n          forbidden.value = true;\r\n        } else {\r\n          forbidden.value = false;\r\n        }\r\n        return forbidden.value\r\n      });\r\n    };\r\n    const onConfirm = async (event) => {\r\n      const r = await getShieleds(propsOptions.value.userID);\r\n      if (r) {\r\n        uni.showToast({\r\n          title: \"对不起，该用户已屏蔽了您，您不能给该用户发送信息\",\r\n          duration: 3000,\r\n        });\r\n        return;\r\n      }\r\n      const { value } = event.detail;\r\n      inputString.value = value;\r\n      const offlinePushInfo = {\r\n        title: \"you have a new message\", // 推送标题\r\n        desc: \"\", // 推送描述\r\n        ex: \"\", // 扩展字段\r\n        iOSPushSound: \"\", // ios推送声音\r\n        iOSBadgeCount: false, // ios推送角标\r\n      };\r\n      openIM\r\n        .createTextMessage(value)\r\n        .then((res) => {\r\n          const options = {\r\n            // recvID: props.userID,\r\n            recvID: propsOptions.value.userID,\r\n            groupID: \"\",\r\n            offlinePushInfo: offlinePushInfo,\r\n            message: res.data,\r\n          };\r\n          openIM\r\n            .sendMessage(options)\r\n            .then(({ data, errCode }) => {\r\n              const SendMessage = JSON.parse(data);\r\n              messageInfo.value.unshift(SendMessage);\r\n              inputString.value = \"\";\r\n            })\r\n            .catch((err) => {\r\n              console.log(\"err=\", err);\r\n            });\r\n        })\r\n        .catch((err) => {\r\n          console.log(\"text err=\", err);\r\n        });\r\n    };\r\n\r\n    /**\r\n     * @description: 已读监听\r\n     * @param {*}\r\n     * @Author:\r\n     * @return {*}\r\n     */\r\n    const asRead = () => {\r\n      openIM.on(\"OnRecvC2CReadReceipt\", (data) => {\r\n        JSON.parse(data.data).map((cr) => {\r\n          cr.msgIDList.map((crt) => {\r\n            messageInfo.value.find((ms) => {\r\n              if (ms.clientMsgID === crt) {\r\n                ms.isRead = true;\r\n              }\r\n            });\r\n          });\r\n        });\r\n      });\r\n    };\r\n\r\n    watch(\r\n      () => messageInfo,\r\n      (count, prevCount) => {\r\n        const selfMessages = count.value.filter(\r\n          (item) => item.sendID === propsOptions.value.userID\r\n        );\r\n        const msgIDList = selfMessages.map((element) => element.clientMsgID);\r\n        const options = {\r\n          // userID: props.userID,\r\n          userID: propsOptions.value.userID,\r\n          msgIDList,\r\n        };\r\n        openIM\r\n          .markC2CMessageAsRead(options)\r\n          .then(({ data }) => {\r\n            console.log(\"传入已读=\", data);\r\n            openIM.markC2CMessageAsRead({\r\n              // userID: props.userID,\r\n              userID: propsOptions.value.userID,\r\n              msgIDList: [],\r\n            });\r\n          })\r\n          .catch((err) => {\r\n            console.log(\"err===\", err);\r\n          });\r\n      },\r\n      {\r\n        deep: true,\r\n      }\r\n    );\r\n    onMounted(() => {\r\n      uni.setNavigationBarTitle({\r\n        // title: props.title,\r\n        title: propsOptions.value.title,\r\n      });\r\n      getConver();\r\n      monitorOnRecv();\r\n      asRead();\r\n    });\r\n    let currentDate = ref(\"\");\r\n    return {\r\n      inputString,\r\n      messageInfo,\r\n      onConfirm,\r\n      currentDate,\r\n      getConver,\r\n      propsOptions,\r\n      operations,\r\n    };\r\n  },\r\n};\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\n.chat-wraper {\r\n  .send-msg {\r\n    position: fixed;\r\n    bottom: 0;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    padding: 20rpx 0;\r\n    width: 100%;\r\n    background-color: #eaeaea;\r\n    .send {\r\n      background-color: #fff;\r\n      height: 80rpx;\r\n      width: 460rpx;\r\n    }\r\n  }\r\n}\r\n</style>\r\n"],"names":["components","ChatContent","onShow","showprops","currentDate","Date","Math","random","getConver","onLoad","options","propsOptions","onNavigationBarButtonTap","e","log","operations","this","itemList","success","res","tapIndex","userID","url","title","content","res2","confirm","conversationID","params","shieldedParty","then","data","code","msg","duration","cancel","fail","errMsg","setup","props","ref","inputString","messageInfo","forbidden","store","useStore","getters","value","groupID","startClientMsgID","count","getHistoryMessageList","JSON","parse","reverse","catch","err","prevCount","msgIDList","filter","item","sendID","map","element","clientMsgID","markC2CMessageAsRead","deep","on","RecvMessage","contentType","unshift","cr","crt","find","ms","isRead","onConfirm","async","event","account","shielding_party","getShieled","flag","getShieleds","detail","offlinePushInfo","desc","ex","iOSPushSound","iOSBadgeCount","createTextMessage","recvID","message","sendMessage","errCode","SendMessage","_createBlock","_component_v_uni_view","class","_component_ChatContent","key","$setup","msgList","_createVNode","_component_v_uni_input","type","placeholder"],"mappings":"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"}